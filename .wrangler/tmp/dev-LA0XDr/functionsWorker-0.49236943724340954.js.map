{
  "version": 3,
  "sources": ["../bundle-2JPvwH/strip-cf-connecting-ip-header.js", "../bundle-cO3Eh1/strip-cf-connecting-ip-header.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/adapter/cloudflare-pages/handler.js", "../../../node_modules/hono/dist/utils/encode.js", "../../../node_modules/hono/dist/utils/jwt/jwa.js", "../../../node_modules/hono/dist/helper/adapter/index.js", "../../../node_modules/hono/dist/utils/jwt/types.js", "../../../node_modules/hono/dist/utils/jwt/utf8.js", "../../../node_modules/hono/dist/utils/jwt/jws.js", "../../../node_modules/hono/dist/utils/jwt/jwt.js", "../../../node_modules/hono/dist/utils/jwt/index.js", "../../../node_modules/hono/dist/middleware/jwt/jwt.js", "../../../functions/api/auth/login.ts", "../../../functions/api/auth/register.ts", "../../../node_modules/hono/dist/helper/factory/index.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../functions/api/middleware.ts", "../../../functions/api/chat/messages.ts", "../../../functions/api/chat/channels.ts", "../../../functions/api/chat/notifications.ts", "../../../functions/api/chat/users.ts", "../../../functions/api/chat/index.ts", "../../../functions/api/admin/index.ts", "../../../functions/api/calendar/index.ts", "../../../functions/api/tasks/index.ts", "../../../functions/api/profile/index.ts", "../../../functions/api/devices.ts", "../../../functions/api/uploads.ts", "../../../functions/api/[[path]].ts", "../pages-QbgBzy/functionsRoutes-0.7132948227806601.mjs", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-cO3Eh1/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-cO3Eh1/middleware-loader.entry.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-2JPvwH/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-2JPvwH/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\gavin\\Github\\FRC7598\\.wrangler\\tmp\\dev-LA0XDr",
  "sourcesContent": ["function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/adapter/cloudflare-pages/handler.ts\nimport { Context } from \"../../context.js\";\nimport { HTTPException } from \"../../http-exception.js\";\nvar handle = (app) => (eventContext) => {\n  return app.fetch(\n    eventContext.request,\n    { ...eventContext.env, eventContext },\n    {\n      waitUntil: eventContext.waitUntil,\n      passThroughOnException: eventContext.passThroughOnException,\n      props: {}\n    }\n  );\n};\nfunction handleMiddleware(middleware) {\n  return async (executionCtx) => {\n    const context = new Context(executionCtx.request, {\n      env: { ...executionCtx.env, eventContext: executionCtx },\n      executionCtx\n    });\n    let response = void 0;\n    try {\n      response = await middleware(context, async () => {\n        try {\n          context.res = await executionCtx.next();\n        } catch (error) {\n          if (error instanceof Error) {\n            context.error = error;\n          } else {\n            throw error;\n          }\n        }\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        context.error = error;\n      } else {\n        throw error;\n      }\n    }\n    if (response) {\n      return response;\n    }\n    if (context.error instanceof HTTPException) {\n      return context.error.getResponse();\n    }\n    if (context.error) {\n      throw context.error;\n    }\n    return context.res;\n  };\n}\nvar serveStatic = () => {\n  return async (c) => {\n    const env = c.env;\n    const res = await env.ASSETS.fetch(c.req.raw);\n    if (res.status === 404) {\n      return c.notFound();\n    }\n    return res;\n  };\n};\nexport {\n  handle,\n  handleMiddleware,\n  serveStatic\n};\n", "// src/utils/encode.ts\nvar decodeBase64Url = (str) => {\n  return decodeBase64(str.replace(/_|-/g, (m) => ({ _: \"/\", \"-\": \"+\" })[m] ?? m));\n};\nvar encodeBase64Url = (buf) => encodeBase64(buf).replace(/\\/|\\+/g, (m) => ({ \"/\": \"_\", \"+\": \"-\" })[m] ?? m);\nvar encodeBase64 = (buf) => {\n  let binary = \"\";\n  const bytes = new Uint8Array(buf);\n  for (let i = 0, len = bytes.length; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n};\nvar decodeBase64 = (str) => {\n  const binary = atob(str);\n  const bytes = new Uint8Array(new ArrayBuffer(binary.length));\n  const half = binary.length / 2;\n  for (let i = 0, j = binary.length - 1; i <= half; i++, j--) {\n    bytes[i] = binary.charCodeAt(i);\n    bytes[j] = binary.charCodeAt(j);\n  }\n  return bytes;\n};\nexport {\n  decodeBase64,\n  decodeBase64Url,\n  encodeBase64,\n  encodeBase64Url\n};\n", "// src/utils/jwt/jwa.ts\nvar AlgorithmTypes = /* @__PURE__ */ ((AlgorithmTypes2) => {\n  AlgorithmTypes2[\"HS256\"] = \"HS256\";\n  AlgorithmTypes2[\"HS384\"] = \"HS384\";\n  AlgorithmTypes2[\"HS512\"] = \"HS512\";\n  AlgorithmTypes2[\"RS256\"] = \"RS256\";\n  AlgorithmTypes2[\"RS384\"] = \"RS384\";\n  AlgorithmTypes2[\"RS512\"] = \"RS512\";\n  AlgorithmTypes2[\"PS256\"] = \"PS256\";\n  AlgorithmTypes2[\"PS384\"] = \"PS384\";\n  AlgorithmTypes2[\"PS512\"] = \"PS512\";\n  AlgorithmTypes2[\"ES256\"] = \"ES256\";\n  AlgorithmTypes2[\"ES384\"] = \"ES384\";\n  AlgorithmTypes2[\"ES512\"] = \"ES512\";\n  AlgorithmTypes2[\"EdDSA\"] = \"EdDSA\";\n  return AlgorithmTypes2;\n})(AlgorithmTypes || {});\nexport {\n  AlgorithmTypes\n};\n", "// src/helper/adapter/index.ts\nvar env = (c, runtime) => {\n  const global = globalThis;\n  const globalEnv = global?.process?.env;\n  runtime ??= getRuntimeKey();\n  const runtimeEnvHandlers = {\n    bun: () => globalEnv,\n    node: () => globalEnv,\n    \"edge-light\": () => globalEnv,\n    deno: () => {\n      return Deno.env.toObject();\n    },\n    workerd: () => c.env,\n    fastly: () => ({}),\n    other: () => ({})\n  };\n  return runtimeEnvHandlers[runtime]();\n};\nvar knownUserAgents = {\n  deno: \"Deno\",\n  bun: \"Bun\",\n  workerd: \"Cloudflare-Workers\",\n  node: \"Node.js\"\n};\nvar getRuntimeKey = () => {\n  const global = globalThis;\n  const userAgentSupported = typeof navigator !== \"undefined\" && typeof navigator.userAgent === \"string\";\n  if (userAgentSupported) {\n    for (const [runtimeKey, userAgent] of Object.entries(knownUserAgents)) {\n      if (checkUserAgentEquals(userAgent)) {\n        return runtimeKey;\n      }\n    }\n  }\n  if (typeof global?.EdgeRuntime === \"string\") {\n    return \"edge-light\";\n  }\n  if (global?.fastly !== void 0) {\n    return \"fastly\";\n  }\n  if (global?.process?.release?.name === \"node\") {\n    return \"node\";\n  }\n  return \"other\";\n};\nvar checkUserAgentEquals = (platform) => {\n  const userAgent = navigator.userAgent;\n  return userAgent.startsWith(platform);\n};\nexport {\n  checkUserAgentEquals,\n  env,\n  getRuntimeKey,\n  knownUserAgents\n};\n", "// src/utils/jwt/types.ts\nvar JwtAlgorithmNotImplemented = class extends Error {\n  constructor(alg) {\n    super(`${alg} is not an implemented algorithm`);\n    this.name = \"JwtAlgorithmNotImplemented\";\n  }\n};\nvar JwtTokenInvalid = class extends Error {\n  constructor(token) {\n    super(`invalid JWT token: ${token}`);\n    this.name = \"JwtTokenInvalid\";\n  }\n};\nvar JwtTokenNotBefore = class extends Error {\n  constructor(token) {\n    super(`token (${token}) is being used before it's valid`);\n    this.name = \"JwtTokenNotBefore\";\n  }\n};\nvar JwtTokenExpired = class extends Error {\n  constructor(token) {\n    super(`token (${token}) expired`);\n    this.name = \"JwtTokenExpired\";\n  }\n};\nvar JwtTokenIssuedAt = class extends Error {\n  constructor(currentTimestamp, iat) {\n    super(\n      `Invalid \"iat\" claim, must be a valid number lower than \"${currentTimestamp}\" (iat: \"${iat}\")`\n    );\n    this.name = \"JwtTokenIssuedAt\";\n  }\n};\nvar JwtTokenIssuer = class extends Error {\n  constructor(expected, iss) {\n    super(`expected issuer \"${expected}\", got ${iss ? `\"${iss}\"` : \"none\"} `);\n    this.name = \"JwtTokenIssuer\";\n  }\n};\nvar JwtHeaderInvalid = class extends Error {\n  constructor(header) {\n    super(`jwt header is invalid: ${JSON.stringify(header)}`);\n    this.name = \"JwtHeaderInvalid\";\n  }\n};\nvar JwtHeaderRequiresKid = class extends Error {\n  constructor(header) {\n    super(`required \"kid\" in jwt header: ${JSON.stringify(header)}`);\n    this.name = \"JwtHeaderRequiresKid\";\n  }\n};\nvar JwtTokenSignatureMismatched = class extends Error {\n  constructor(token) {\n    super(`token(${token}) signature mismatched`);\n    this.name = \"JwtTokenSignatureMismatched\";\n  }\n};\nvar CryptoKeyUsage = /* @__PURE__ */ ((CryptoKeyUsage2) => {\n  CryptoKeyUsage2[\"Encrypt\"] = \"encrypt\";\n  CryptoKeyUsage2[\"Decrypt\"] = \"decrypt\";\n  CryptoKeyUsage2[\"Sign\"] = \"sign\";\n  CryptoKeyUsage2[\"Verify\"] = \"verify\";\n  CryptoKeyUsage2[\"DeriveKey\"] = \"deriveKey\";\n  CryptoKeyUsage2[\"DeriveBits\"] = \"deriveBits\";\n  CryptoKeyUsage2[\"WrapKey\"] = \"wrapKey\";\n  CryptoKeyUsage2[\"UnwrapKey\"] = \"unwrapKey\";\n  return CryptoKeyUsage2;\n})(CryptoKeyUsage || {});\nexport {\n  CryptoKeyUsage,\n  JwtAlgorithmNotImplemented,\n  JwtHeaderInvalid,\n  JwtHeaderRequiresKid,\n  JwtTokenExpired,\n  JwtTokenInvalid,\n  JwtTokenIssuedAt,\n  JwtTokenIssuer,\n  JwtTokenNotBefore,\n  JwtTokenSignatureMismatched\n};\n", "// src/utils/jwt/utf8.ts\nvar utf8Encoder = new TextEncoder();\nvar utf8Decoder = new TextDecoder();\nexport {\n  utf8Decoder,\n  utf8Encoder\n};\n", "// src/utils/jwt/jws.ts\nimport { getRuntimeKey } from \"../../helper/adapter/index.js\";\nimport { decodeBase64 } from \"../encode.js\";\nimport { CryptoKeyUsage, JwtAlgorithmNotImplemented } from \"./types.js\";\nimport { utf8Encoder } from \"./utf8.js\";\nasync function signing(privateKey, alg, data) {\n  const algorithm = getKeyAlgorithm(alg);\n  const cryptoKey = await importPrivateKey(privateKey, algorithm);\n  return await crypto.subtle.sign(algorithm, cryptoKey, data);\n}\nasync function verifying(publicKey, alg, signature, data) {\n  const algorithm = getKeyAlgorithm(alg);\n  const cryptoKey = await importPublicKey(publicKey, algorithm);\n  return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n}\nfunction pemToBinary(pem) {\n  return decodeBase64(pem.replace(/-+(BEGIN|END).*/g, \"\").replace(/\\s/g, \"\"));\n}\nasync function importPrivateKey(key, alg) {\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  if (isCryptoKey(key)) {\n    if (key.type !== \"private\" && key.type !== \"secret\") {\n      throw new Error(\n        `unexpected key type: CryptoKey.type is ${key.type}, expected private or secret`\n      );\n    }\n    return key;\n  }\n  const usages = [CryptoKeyUsage.Sign];\n  if (typeof key === \"object\") {\n    return await crypto.subtle.importKey(\"jwk\", key, alg, false, usages);\n  }\n  if (key.includes(\"PRIVATE\")) {\n    return await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), alg, false, usages);\n  }\n  return await crypto.subtle.importKey(\"raw\", utf8Encoder.encode(key), alg, false, usages);\n}\nasync function importPublicKey(key, alg) {\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  if (isCryptoKey(key)) {\n    if (key.type === \"public\" || key.type === \"secret\") {\n      return key;\n    }\n    key = await exportPublicJwkFrom(key);\n  }\n  if (typeof key === \"string\" && key.includes(\"PRIVATE\")) {\n    const privateKey = await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), alg, true, [\n      CryptoKeyUsage.Sign\n    ]);\n    key = await exportPublicJwkFrom(privateKey);\n  }\n  const usages = [CryptoKeyUsage.Verify];\n  if (typeof key === \"object\") {\n    return await crypto.subtle.importKey(\"jwk\", key, alg, false, usages);\n  }\n  if (key.includes(\"PUBLIC\")) {\n    return await crypto.subtle.importKey(\"spki\", pemToBinary(key), alg, false, usages);\n  }\n  return await crypto.subtle.importKey(\"raw\", utf8Encoder.encode(key), alg, false, usages);\n}\nasync function exportPublicJwkFrom(privateKey) {\n  if (privateKey.type !== \"private\") {\n    throw new Error(`unexpected key type: ${privateKey.type}`);\n  }\n  if (!privateKey.extractable) {\n    throw new Error(\"unexpected private key is unextractable\");\n  }\n  const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\n  const { kty } = jwk;\n  const { alg, e, n } = jwk;\n  const { crv, x, y } = jwk;\n  return { kty, alg, e, n, crv, x, y, key_ops: [CryptoKeyUsage.Verify] };\n}\nfunction getKeyAlgorithm(name) {\n  switch (name) {\n    case \"HS256\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-256\"\n        }\n      };\n    case \"HS384\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-384\"\n        }\n      };\n    case \"HS512\":\n      return {\n        name: \"HMAC\",\n        hash: {\n          name: \"SHA-512\"\n        }\n      };\n    case \"RS256\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-256\"\n        }\n      };\n    case \"RS384\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-384\"\n        }\n      };\n    case \"RS512\":\n      return {\n        name: \"RSASSA-PKCS1-v1_5\",\n        hash: {\n          name: \"SHA-512\"\n        }\n      };\n    case \"PS256\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-256\"\n        },\n        saltLength: 32\n      };\n    case \"PS384\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-384\"\n        },\n        saltLength: 48\n      };\n    case \"PS512\":\n      return {\n        name: \"RSA-PSS\",\n        hash: {\n          name: \"SHA-512\"\n        },\n        saltLength: 64\n      };\n    case \"ES256\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-256\"\n        },\n        namedCurve: \"P-256\"\n      };\n    case \"ES384\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-384\"\n        },\n        namedCurve: \"P-384\"\n      };\n    case \"ES512\":\n      return {\n        name: \"ECDSA\",\n        hash: {\n          name: \"SHA-512\"\n        },\n        namedCurve: \"P-521\"\n      };\n    case \"EdDSA\":\n      return {\n        name: \"Ed25519\",\n        namedCurve: \"Ed25519\"\n      };\n    default:\n      throw new JwtAlgorithmNotImplemented(name);\n  }\n}\nfunction isCryptoKey(key) {\n  const runtime = getRuntimeKey();\n  if (runtime === \"node\" && !!crypto.webcrypto) {\n    return key instanceof crypto.webcrypto.CryptoKey;\n  }\n  return key instanceof CryptoKey;\n}\nexport {\n  signing,\n  verifying\n};\n", "// src/utils/jwt/jwt.ts\nimport { decodeBase64Url, encodeBase64Url } from \"../../utils/encode.js\";\nimport { AlgorithmTypes } from \"./jwa.js\";\nimport { signing, verifying } from \"./jws.js\";\nimport {\n  JwtHeaderInvalid,\n  JwtHeaderRequiresKid,\n  JwtTokenExpired,\n  JwtTokenInvalid,\n  JwtTokenIssuedAt,\n  JwtTokenIssuer,\n  JwtTokenNotBefore,\n  JwtTokenSignatureMismatched\n} from \"./types.js\";\nimport { utf8Decoder, utf8Encoder } from \"./utf8.js\";\nvar encodeJwtPart = (part) => encodeBase64Url(utf8Encoder.encode(JSON.stringify(part)).buffer).replace(/=/g, \"\");\nvar encodeSignaturePart = (buf) => encodeBase64Url(buf).replace(/=/g, \"\");\nvar decodeJwtPart = (part) => JSON.parse(utf8Decoder.decode(decodeBase64Url(part)));\nfunction isTokenHeader(obj) {\n  if (typeof obj === \"object\" && obj !== null) {\n    const objWithAlg = obj;\n    return \"alg\" in objWithAlg && Object.values(AlgorithmTypes).includes(objWithAlg.alg) && (!(\"typ\" in objWithAlg) || objWithAlg.typ === \"JWT\");\n  }\n  return false;\n}\nvar sign = async (payload, privateKey, alg = \"HS256\") => {\n  const encodedPayload = encodeJwtPart(payload);\n  let encodedHeader;\n  if (typeof privateKey === \"object\" && \"alg\" in privateKey) {\n    alg = privateKey.alg;\n    encodedHeader = encodeJwtPart({ alg, typ: \"JWT\", kid: privateKey.kid });\n  } else {\n    encodedHeader = encodeJwtPart({ alg, typ: \"JWT\" });\n  }\n  const partialToken = `${encodedHeader}.${encodedPayload}`;\n  const signaturePart = await signing(privateKey, alg, utf8Encoder.encode(partialToken));\n  const signature = encodeSignaturePart(signaturePart);\n  return `${partialToken}.${signature}`;\n};\nvar verify = async (token, publicKey, algOrOptions) => {\n  const optsIn = typeof algOrOptions === \"string\" ? { alg: algOrOptions } : algOrOptions || {};\n  const opts = {\n    alg: optsIn.alg ?? \"HS256\",\n    iss: optsIn.iss,\n    nbf: optsIn.nbf ?? true,\n    exp: optsIn.exp ?? true,\n    iat: optsIn.iat ?? true\n  };\n  const tokenParts = token.split(\".\");\n  if (tokenParts.length !== 3) {\n    throw new JwtTokenInvalid(token);\n  }\n  const { header, payload } = decode(token);\n  if (!isTokenHeader(header)) {\n    throw new JwtHeaderInvalid(header);\n  }\n  const now = Date.now() / 1e3 | 0;\n  if (opts.nbf && payload.nbf && payload.nbf > now) {\n    throw new JwtTokenNotBefore(token);\n  }\n  if (opts.exp && payload.exp && payload.exp <= now) {\n    throw new JwtTokenExpired(token);\n  }\n  if (opts.iat && payload.iat && now < payload.iat) {\n    throw new JwtTokenIssuedAt(now, payload.iat);\n  }\n  if (opts.iss) {\n    if (!payload.iss) {\n      throw new JwtTokenIssuer(opts.iss, null);\n    }\n    if (typeof opts.iss === \"string\" && payload.iss !== opts.iss) {\n      throw new JwtTokenIssuer(opts.iss, payload.iss);\n    }\n    if (opts.iss instanceof RegExp && !opts.iss.test(payload.iss)) {\n      throw new JwtTokenIssuer(opts.iss, payload.iss);\n    }\n  }\n  const headerPayload = token.substring(0, token.lastIndexOf(\".\"));\n  const verified = await verifying(\n    publicKey,\n    opts.alg,\n    decodeBase64Url(tokenParts[2]),\n    utf8Encoder.encode(headerPayload)\n  );\n  if (!verified) {\n    throw new JwtTokenSignatureMismatched(token);\n  }\n  return payload;\n};\nvar verifyWithJwks = async (token, options, init) => {\n  const verifyOpts = options.verification || {};\n  const header = decodeHeader(token);\n  if (!isTokenHeader(header)) {\n    throw new JwtHeaderInvalid(header);\n  }\n  if (!header.kid) {\n    throw new JwtHeaderRequiresKid(header);\n  }\n  if (options.jwks_uri) {\n    const response = await fetch(options.jwks_uri, init);\n    if (!response.ok) {\n      throw new Error(`failed to fetch JWKS from ${options.jwks_uri}`);\n    }\n    const data = await response.json();\n    if (!data.keys) {\n      throw new Error('invalid JWKS response. \"keys\" field is missing');\n    }\n    if (!Array.isArray(data.keys)) {\n      throw new Error('invalid JWKS response. \"keys\" field is not an array');\n    }\n    if (options.keys) {\n      options.keys.push(...data.keys);\n    } else {\n      options.keys = data.keys;\n    }\n  } else if (!options.keys) {\n    throw new Error('verifyWithJwks requires options for either \"keys\" or \"jwks_uri\" or both');\n  }\n  const matchingKey = options.keys.find((key) => key.kid === header.kid);\n  if (!matchingKey) {\n    throw new JwtTokenInvalid(token);\n  }\n  return await verify(token, matchingKey, {\n    alg: matchingKey.alg || header.alg,\n    ...verifyOpts\n  });\n};\nvar decode = (token) => {\n  try {\n    const [h, p] = token.split(\".\");\n    const header = decodeJwtPart(h);\n    const payload = decodeJwtPart(p);\n    return {\n      header,\n      payload\n    };\n  } catch {\n    throw new JwtTokenInvalid(token);\n  }\n};\nvar decodeHeader = (token) => {\n  try {\n    const [h] = token.split(\".\");\n    return decodeJwtPart(h);\n  } catch {\n    throw new JwtTokenInvalid(token);\n  }\n};\nexport {\n  decode,\n  decodeHeader,\n  isTokenHeader,\n  sign,\n  verify,\n  verifyWithJwks\n};\n", "// src/utils/jwt/index.ts\nimport { decode, sign, verify, verifyWithJwks } from \"./jwt.js\";\nvar Jwt = { sign, verify, decode, verifyWithJwks };\nexport {\n  Jwt\n};\n", "// src/middleware/jwt/jwt.ts\nimport { getCookie, getSignedCookie } from \"../../helper/cookie/index.js\";\nimport { HTTPException } from \"../../http-exception.js\";\nimport { Jwt } from \"../../utils/jwt/index.js\";\nimport \"../../context.js\";\nvar jwt = (options) => {\n  const verifyOpts = options.verification || {};\n  if (!options || !options.secret) {\n    throw new Error('JWT auth middleware requires options for \"secret\"');\n  }\n  if (!crypto.subtle || !crypto.subtle.importKey) {\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\n  }\n  return async function jwt2(ctx, next) {\n    const headerName = options.headerName || \"Authorization\";\n    const credentials = ctx.req.raw.headers.get(headerName);\n    let token;\n    if (credentials) {\n      const parts = credentials.split(/\\s+/);\n      if (parts.length !== 2) {\n        const errDescription = \"invalid credentials structure\";\n        throw new HTTPException(401, {\n          message: errDescription,\n          res: unauthorizedResponse({\n            ctx,\n            error: \"invalid_request\",\n            errDescription\n          })\n        });\n      } else {\n        token = parts[1];\n      }\n    } else if (options.cookie) {\n      if (typeof options.cookie == \"string\") {\n        token = getCookie(ctx, options.cookie);\n      } else if (options.cookie.secret) {\n        if (options.cookie.prefixOptions) {\n          token = await getSignedCookie(\n            ctx,\n            options.cookie.secret,\n            options.cookie.key,\n            options.cookie.prefixOptions\n          );\n        } else {\n          token = await getSignedCookie(ctx, options.cookie.secret, options.cookie.key);\n        }\n      } else {\n        if (options.cookie.prefixOptions) {\n          token = getCookie(ctx, options.cookie.key, options.cookie.prefixOptions);\n        } else {\n          token = getCookie(ctx, options.cookie.key);\n        }\n      }\n    }\n    if (!token) {\n      const errDescription = \"no authorization included in request\";\n      throw new HTTPException(401, {\n        message: errDescription,\n        res: unauthorizedResponse({\n          ctx,\n          error: \"invalid_request\",\n          errDescription\n        })\n      });\n    }\n    let payload;\n    let cause;\n    try {\n      payload = await Jwt.verify(token, options.secret, {\n        alg: options.alg,\n        ...verifyOpts\n      });\n    } catch (e) {\n      cause = e;\n    }\n    if (!payload) {\n      throw new HTTPException(401, {\n        message: \"Unauthorized\",\n        res: unauthorizedResponse({\n          ctx,\n          error: \"invalid_token\",\n          statusText: \"Unauthorized\",\n          errDescription: \"token verification failure\"\n        }),\n        cause\n      });\n    }\n    ctx.set(\"jwtPayload\", payload);\n    await next();\n  };\n};\nfunction unauthorizedResponse(opts) {\n  return new Response(\"Unauthorized\", {\n    status: 401,\n    statusText: opts.statusText,\n    headers: {\n      \"WWW-Authenticate\": `Bearer realm=\"${opts.ctx.req.url}\",error=\"${opts.error}\",error_description=\"${opts.errDescription}\"`\n    }\n  });\n}\nvar verifyWithJwks = Jwt.verifyWithJwks;\nvar verify = Jwt.verify;\nvar decode = Jwt.decode;\nvar sign = Jwt.sign;\nexport {\n  decode,\n  jwt,\n  sign,\n  verify,\n  verifyWithJwks\n};\n", "import { Hono } from 'hono';\r\nimport { sign } from 'hono/jwt';\r\n\r\ninterface Env {\r\n  // Using any to avoid requiring CF types in app-level tsconfig\r\n  DB: any;\r\n  JWT_SECRET: string;\r\n}\r\n\r\nasync function sha256(text: string): Promise<string> {\r\n  const data = new TextEncoder().encode(text);\r\n  const hash = await crypto.subtle.digest('SHA-256', data);\r\n  return Array.from(new Uint8Array(hash)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\nconst app = new Hono<{ Bindings: Env }>();\r\n\r\n// Login with full name and password\r\napp.post('/', async (c) => {\r\n  try {\r\n    const { fullName, password } = await c.req.json();\r\n    if (!fullName || !password) {\r\n      return c.json({ error: 'Full name and password are required' }, 400);\r\n    }\r\n\r\n    const user = await c.env.DB.prepare('SELECT id, full_name, password_hash, is_admin FROM users WHERE full_name = ?')\r\n      .bind(fullName)\r\n      .first();\r\n\r\n    if (!user) return c.json({ error: 'Invalid credentials' }, 401);\r\n\r\n    const hashed = await sha256(password);\r\n    if (hashed !== user.password_hash) return c.json({ error: 'Invalid credentials' }, 401);\r\n\r\n    const token = await sign({\r\n      id: user.id,\r\n      name: user.full_name,\r\n      isAdmin: !!user.is_admin,\r\n      iat: Math.floor(Date.now() / 1000),\r\n      exp: Math.floor(Date.now() / 1000) + 24 * 60 * 60,\r\n    }, c.env.JWT_SECRET);\r\n\r\n    return c.json({\r\n      token,\r\n      user: { id: user.id, name: user.full_name, isAdmin: !!user.is_admin },\r\n      message: 'Login successful',\r\n    });\r\n  } catch (e) {\r\n    console.error('login error', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\nexport default app;\r\n", "import { Hono } from 'hono';\r\nimport { sign, verify } from 'hono/jwt';\r\n\r\ninterface Env {\r\n  DB: any;\r\n  JWT_SECRET: string;\r\n}\r\n\r\nasync function sha256(text: string): Promise<string> {\r\n  const data = new TextEncoder().encode(text);\r\n  const hash = await crypto.subtle.digest('SHA-256', data);\r\n  return Array.from(new Uint8Array(hash)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\nconst app = new Hono<{ Bindings: Env }>();\r\n\r\n// Public registration (non-admin). To create admin users, the requester must be admin and send is_admin=true\r\napp.post('/', async (c) => {\r\n  try {\r\n    const body = await c.req.json();\r\n    const fullName = body.fullName as string;\r\n    const password = body.password as string;\r\n    const is_admin = body.is_admin as boolean | undefined;\r\n\r\n    if (!fullName || !password) {\r\n      return c.json({ error: 'Full name and password are required' }, 400);\r\n    }\r\n\r\n    // If admin flag requested, verify requester token is admin\r\n    let isAdminValue = 0;\r\n    if (is_admin === true) {\r\n      const auth = c.req.header('Authorization');\r\n      if (!auth?.startsWith('Bearer ')) return c.json({ error: 'Only admins can create admin users' }, 403);\r\n      try {\r\n        const token = auth.split(' ')[1];\r\n        const decoded = await verify(token, c.env.JWT_SECRET);\r\n        if (!(decoded.isAdmin === true || decoded.isAdmin === 1)) {\r\n          return c.json({ error: 'Only admins can create admin users' }, 403);\r\n        }\r\n        isAdminValue = 1;\r\n      } catch {\r\n        return c.json({ error: 'Invalid authorization' }, 401);\r\n      }\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      return c.json({ error: 'Password must be at least 6 characters' }, 400);\r\n    }\r\n\r\n    const password_hash = await sha256(password);\r\n\r\n    const { success, meta } = await c.env.DB.prepare(\r\n      'INSERT INTO users (full_name, password_hash, is_admin) VALUES (?, ?, ?)'\r\n    ).bind(fullName, password_hash, isAdminValue).run();\r\n\r\n    if (!success) return c.json({ error: 'Failed to register' }, 500);\r\n\r\n    const token = await sign({\r\n      id: meta.last_row_id,\r\n      name: fullName,\r\n      isAdmin: !!isAdminValue,\r\n      iat: Math.floor(Date.now() / 1000),\r\n      exp: Math.floor(Date.now() / 1000) + 24 * 60 * 60,\r\n    }, c.env.JWT_SECRET);\r\n\r\n    return c.json({\r\n      token,\r\n      user: { id: meta.last_row_id, name: fullName, isAdmin: !!isAdminValue },\r\n      message: 'Registration successful'\r\n    });\r\n  } catch (e) {\r\n    if (e instanceof Error && e.message.includes('UNIQUE')) {\r\n      return c.json({ error: 'User already exists' }, 409);\r\n    }\r\n    console.error('register error', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\nexport default app;\r\n", "// src/helper/factory/index.ts\nimport { Hono } from \"../../hono.js\";\nvar Factory = class {\n  initApp;\n  #defaultAppOptions;\n  constructor(init) {\n    this.initApp = init?.initApp;\n    this.#defaultAppOptions = init?.defaultAppOptions;\n  }\n  createApp = (options) => {\n    const app = new Hono(\n      options && this.#defaultAppOptions ? { ...this.#defaultAppOptions, ...options } : options ?? this.#defaultAppOptions\n    );\n    if (this.initApp) {\n      this.initApp(app);\n    }\n    return app;\n  };\n  createMiddleware = (middleware) => middleware;\n  createHandlers = (...handlers) => {\n    return handlers.filter((handler) => handler !== void 0);\n  };\n};\nvar createFactory = (init) => new Factory(init);\nvar createMiddleware = (middleware) => middleware;\nexport {\n  Factory,\n  createFactory,\n  createMiddleware\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "import { createMiddleware } from 'hono/factory';\r\nimport { cors } from 'hono/cors';\r\n\r\nexport const corsMiddleware = cors({\r\n  origin: '*',\r\n  allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n  allowHeaders: ['Content-Type', 'Authorization'],\r\n});\r\n\r\nexport const errorMiddleware = createMiddleware(async (c, next) => {\r\n  try {\r\n    await next();\r\n  } catch (e) {\r\n    console.error('API error:', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n", "import { Context } from 'hono';\r\nimport { D1Database } from '@cloudflare/workers-types';\r\n\r\ninterface Env {\r\n\tDB: D1Database;\r\n}\r\n\r\nexport async function getMessages(c: Context): Promise<Response> {\r\n\tconst { channelId } = c.req.param();\r\n\tconst userIdStr = c.req.query('user_id');\r\n\tconst userId = userIdStr ? Number(userIdStr) : undefined;\r\n\tif (!channelId) return new Response('Channel ID is required', { status: 400 });\r\n\r\n\ttry {\r\n\t\tconst channelRow = await c.env.DB.prepare('SELECT is_private FROM channels WHERE id = ?').bind(channelId).first();\r\n\t\tif (!channelRow) return new Response('Channel not found', { status: 404 });\r\n\t\tconst isPrivate = (channelRow as { is_private: number }).is_private === 1;\r\n\t\tif (isPrivate) {\r\n\t\t\tif (!userId) return new Response('Unauthorized', { status: 401 });\r\n\t\t\tconst adminRow = await c.env.DB.prepare('SELECT is_admin FROM users WHERE id = ?').bind(userId).first();\r\n\t\t\tconst isAdmin = adminRow && (adminRow as { is_admin: number }).is_admin === 1;\r\n\t\t\tif (!isAdmin) {\r\n\t\t\t\tconst memberRow = await c.env.DB.prepare('SELECT 1 FROM channel_members WHERE channel_id = ? AND user_id = ?').bind(channelId, userId).first();\r\n\t\t\t\tif (!memberRow) return new Response('Forbidden', { status: 403 });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst { results } = await c.env.DB.prepare(\r\n\t\t\t'SELECT messages.*, users.full_name as sender_username, users.avatar_color as sender_avatar_color FROM messages JOIN users ON messages.sender_id = users.id WHERE channel_id = ? ORDER BY timestamp ASC'\r\n\t\t).bind(channelId).all();\r\n\r\n\t\t// Attach reactions per message\r\n\t\ttry {\r\n\t\t\tconst ids = (results as any[]).map(r => r.id);\r\n\t\t\tif (ids.length > 0) {\r\n\t\t\t\tconst placeholders = ids.map(() => '?').join(',');\r\n\t\t\t\tconst reactRes = await c.env.DB.prepare(\r\n\t\t\t\t\t`SELECT mr.message_id, mr.user_id, mr.reaction_key, u.full_name as username\r\n\t\t\t\t\t FROM message_reactions mr JOIN users u ON u.id = mr.user_id\r\n\t\t\t\t\t WHERE mr.message_id IN (${placeholders})`\r\n\t\t\t\t).bind(...ids).all();\r\n\t\t\t\tconst byMsg = new Map<number, Array<{ user_id: number; username: string; reaction_key: string }>>();\r\n\t\t\t\tfor (const r of (reactRes.results as any[]) || []) {\r\n\t\t\t\t\tconst arr = byMsg.get((r as any).message_id) || [];\r\n\t\t\t\t\tarr.push({ user_id: Number((r as any).user_id), username: String((r as any).username), reaction_key: String((r as any).reaction_key) });\r\n\t\t\t\t\tbyMsg.set((r as any).message_id, arr);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const m of results as any[]) {\r\n\t\t\t\t\tconst arr = byMsg.get(Number(m.id)) || [];\r\n\t\t\t\t\tconst counts: Record<string, number> = {};\r\n\t\t\t\t\tconst mine: string[] = [];\r\n\t\t\t\t\tfor (const r of arr) {\r\n\t\t\t\t\t\tcounts[r.reaction_key] = (counts[r.reaction_key] || 0) + 1;\r\n\t\t\t\t\t\tif (userId && r.user_id === userId) mine.push(r.reaction_key);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t(m as any).reaction_counts = counts;\r\n\t\t\t\t\t(m as any).my_reactions = mine;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch {}\r\n\r\n\t\t// Fetch read status for this channel to compute readers per message\r\n\t\tlet channelReadStatuses: Array<{ user_id: number; last_read_timestamp: string; username: string }> = [];\r\n\t\ttry {\r\n\t\t\tconst readRes = await c.env.DB.prepare(\r\n\t\t\t\t'SELECT urs.user_id, urs.last_read_timestamp, u.full_name as username FROM user_read_status urs JOIN users u ON u.id = urs.user_id WHERE urs.channel_id = ?'\r\n\t\t\t).bind(channelId).all();\r\n\t\t\tchannelReadStatuses = (readRes.results as any[])?.map(r => ({\r\n\t\t\t\tuser_id: Number((r as any).user_id),\r\n\t\t\t\tlast_read_timestamp: (r as any).last_read_timestamp,\r\n\t\t\t\tusername: (r as any).username,\r\n\t\t\t})) || [];\r\n\t\t} catch {}\r\n\r\n\t\tif (userId && results.length > 0) {\r\n\t\t\ttry {\r\n\t\t\t\tconst otherReadRow = await c.env.DB.prepare(\r\n\t\t\t\t\t'SELECT MAX(last_read_timestamp) as max_ts FROM user_read_status WHERE channel_id = ? AND user_id != ?'\r\n\t\t\t\t).bind(channelId, userId).first();\r\n\t\t\t\tconst otherMaxRead: string | null = (otherReadRow as any)?.max_ts || null;\r\n\t\t\t\tif (otherMaxRead) {\r\n\t\t\t\t\tconst otherReadTime = new Date(otherMaxRead).getTime();\r\n\t\t\t\t\tfor (const r of results as any[]) {\r\n\t\t\t\t\t\tif (r.sender_id === userId) {\r\n\t\t\t\t\t\t\tconst msgTime = new Date(r.timestamp).getTime();\r\n\t\t\t\t\t\t\t(r as any).read_by_any = otherReadTime >= msgTime ? 1 : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (const r of results as any[]) {\r\n\t\t\t\t\t\tif (r.sender_id === userId) (r as any).read_by_any = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch {}\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (Array.isArray(results) && channelReadStatuses.length > 0) {\r\n\t\t\t\tfor (const r of results as any[]) {\r\n\t\t\t\t\tconst msgTime = new Date(r.timestamp).getTime();\r\n\t\t\t\t\tconst readers = channelReadStatuses\r\n\t\t\t\t\t\t.filter(s => s.user_id !== Number(r.sender_id) && new Date(s.last_read_timestamp).getTime() >= msgTime)\r\n\t\t\t\t\t\t.map(s => ({ user_id: s.user_id, username: s.username, read_at: s.last_read_timestamp }));\r\n\t\t\t\t\t(r as any).readers = readers;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch {}\r\n\r\n\t\tif (userId && results.length > 0) {\r\n\t\t\ttry {\r\n\t\t\t\tconst timestamp = new Date().toISOString();\r\n\t\t\t\tawait c.env.DB.prepare(\r\n\t\t\t\t\t`INSERT INTO user_read_status (user_id, channel_id, last_read_timestamp)\r\n\t\t\t\t\t VALUES (?, ?, ?)\r\n\t\t\t\t\t ON CONFLICT(user_id, channel_id) DO UPDATE SET last_read_timestamp = excluded.last_read_timestamp`\r\n\t\t\t\t).bind(userId, channelId, timestamp).run();\r\n\t\t\t} catch {}\r\n\t\t}\r\n\r\n\t\treturn new Response(JSON.stringify(results), { headers: { 'Content-Type': 'application/json' } });\r\n\t} catch (error) {\r\n\t\treturn new Response('Error fetching messages', { status: 500 });\r\n\t}\r\n}\r\n\r\nexport async function sendMessage(c: Context): Promise<Response> {\r\n\tconst { channelId } = c.req.param();\r\n\tconst userIdStr = c.req.query('user_id');\r\n\tconst userIdFromQuery = userIdStr ? Number(userIdStr) : undefined;\r\n\tif (!channelId) return new Response('Channel ID is required', { status: 400 });\r\n\ttry {\r\n\t\tconst { content, sender_id } = await c.req.json();\r\n\t\tif (!content || !sender_id) return new Response('Content and sender_id are required', { status: 400 });\r\n\t\tconst effectiveUserId = userIdFromQuery || Number(sender_id);\r\n\t\tif (!effectiveUserId) return new Response('Unauthorized', { status: 401 });\r\n\r\n\t\tconst chanRow = await c.env.DB.prepare('SELECT is_private FROM channels WHERE id = ?').bind(channelId).first();\r\n\t\tif (!chanRow) return new Response('Channel not found', { status: 404 });\r\n\t\tconst isPrivateChan = (chanRow as { is_private: number }).is_private === 1;\r\n\t\tif (isPrivateChan) {\r\n\t\t\tconst admRow = await c.env.DB.prepare('SELECT is_admin FROM users WHERE id = ?').bind(effectiveUserId).first();\r\n\t\t\tconst isAdmin = admRow && (admRow as { is_admin: number }).is_admin === 1;\r\n\t\t\tif (!isAdmin) {\r\n\t\t\t\tconst membRow = await c.env.DB.prepare('SELECT 1 FROM channel_members WHERE channel_id = ? AND user_id = ?').bind(channelId, effectiveUserId).first();\r\n\t\t\t\tif (!membRow) return new Response('Forbidden', { status: 403 });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst timestamp = new Date().toISOString();\r\n\t\tconst result = await c.env.DB.prepare(\r\n\t\t\t'INSERT INTO messages (channel_id, sender_id, content, timestamp) VALUES (?, ?, ?, ?)'\r\n\t\t).bind(channelId, sender_id, content, timestamp).run();\r\n\t\tif (result.success) {\r\n\t\t\ttry {\r\n\t\t\t\tawait c.env.DB.prepare(\r\n\t\t\t\t\t`INSERT INTO user_read_status (user_id, channel_id, last_read_timestamp)\r\n\t\t\t\t\t VALUES (?, ?, ?)\r\n\t\t\t\t\t ON CONFLICT(user_id, channel_id) DO UPDATE SET last_read_timestamp = excluded.last_read_timestamp`\r\n\t\t\t\t).bind(sender_id, channelId, timestamp).run();\r\n\t\t\t} catch {}\r\n\t\t\treturn new Response(JSON.stringify({ message: 'Message sent' }), { status: 201, headers: { 'Content-Type': 'application/json' } });\r\n\t\t}\r\n\t\treturn new Response('Failed to send message', { status: 500 });\r\n\t} catch {\r\n\t\treturn new Response('Error sending message', { status: 500 });\r\n\t}\r\n}\r\n\r\nexport async function deleteMessage(c: Context): Promise<Response> {\r\n\tconst { messageId } = c.req.param();\r\n\tif (!messageId) return new Response('Message ID is required', { status: 400 });\r\n\ttry {\r\n\t\tconst { user_id } = await c.req.json();\r\n\t\tif (!user_id) return new Response('User ID is required', { status: 400 });\r\n\t\tconst message = await c.env.DB.prepare('SELECT sender_id FROM messages WHERE id = ?').bind(messageId).first();\r\n\t\tif (!message) return new Response('Message not found', { status: 404 });\r\n\t\tconst isAdminRow = await c.env.DB.prepare('SELECT is_admin FROM users WHERE id = ?').bind(user_id).first();\r\n\t\tconst isAuthorized = (isAdminRow && (isAdminRow as any).is_admin === 1) || (message as any).sender_id === Number(user_id);\r\n\t\tif (!isAuthorized) return new Response('Unauthorized', { status: 403 });\r\n\t\tconst result = await c.env.DB.prepare('DELETE FROM messages WHERE id = ?').bind(messageId).run();\r\n\t\tif (result.success) return new Response(JSON.stringify({ message: 'Message deleted' }), { headers: { 'Content-Type': 'application/json' } });\r\n\t\treturn new Response('Failed to delete message', { status: 500 });\r\n\t} catch {\r\n\t\treturn new Response('Error deleting message', { status: 500 });\r\n\t}\r\n}\r\n\r\n// Direct messages\r\nexport async function getDMMessages(c: Context): Promise<Response> {\r\n\tconst { dmId } = c.req.param();\r\n\tconst userIdStr = c.req.query('user_id');\r\n\tconst userId = userIdStr ? Number(userIdStr) : undefined;\r\n\tif (!dmId || !dmId.startsWith('dm_')) return new Response('Invalid DM ID', { status: 400 });\r\n\tif (!userId) return new Response('User ID is required', { status: 401 });\r\n\ttry {\r\n\t\tconst dmParts = dmId.split('_');\r\n\t\tif (dmParts.length !== 3) return new Response('Invalid DM ID format', { status: 400 });\r\n\t\tconst user1Id = parseInt(dmParts[1]);\r\n\t\tconst user2Id = parseInt(dmParts[2]);\r\n\t\tif (userId !== user1Id && userId !== user2Id) return new Response('Unauthorized', { status: 403 });\r\n\t\tconst { results } = await c.env.DB.prepare(\r\n\t\t\t'SELECT messages.*, users.full_name as sender_username, users.avatar_color as sender_avatar_color FROM messages JOIN users ON messages.sender_id = users.id WHERE channel_id = ? ORDER BY timestamp ASC'\r\n\t\t).bind(dmId).all();\r\n\r\n\t\t// Attach reactions per message\r\n\t\ttry {\r\n\t\t\tconst ids = (results as any[]).map(r => r.id);\r\n\t\t\tif (ids.length > 0) {\r\n\t\t\t\tconst placeholders = ids.map(() => '?').join(',');\r\n\t\t\t\tconst reactRes = await c.env.DB.prepare(\r\n\t\t\t\t\t`SELECT mr.message_id, mr.user_id, mr.reaction_key, u.full_name as username\r\n\t\t\t\t\t FROM message_reactions mr JOIN users u ON u.id = mr.user_id\r\n\t\t\t\t\t WHERE mr.message_id IN (${placeholders})`\r\n\t\t\t\t).bind(...ids).all();\r\n\t\t\t\tconst byMsg = new Map<number, Array<{ user_id: number; username: string; reaction_key: string }>>();\r\n\t\t\t\tfor (const r of (reactRes.results as any[]) || []) {\r\n\t\t\t\t\tconst arr = byMsg.get((r as any).message_id) || [];\r\n\t\t\t\t\tarr.push({ user_id: Number((r as any).user_id), username: String((r as any).username), reaction_key: String((r as any).reaction_key) });\r\n\t\t\t\t\tbyMsg.set((r as any).message_id, arr);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const m of results as any[]) {\r\n\t\t\t\t\tconst arr = byMsg.get(Number(m.id)) || [];\r\n\t\t\t\t\tconst counts: Record<string, number> = {};\r\n\t\t\t\t\tconst mine: string[] = [];\r\n\t\t\t\t\tfor (const r of arr) {\r\n\t\t\t\t\t\tcounts[r.reaction_key] = (counts[r.reaction_key] || 0) + 1;\r\n\t\t\t\t\t\tif (userId && r.user_id === userId) mine.push(r.reaction_key);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t(m as any).reaction_counts = counts;\r\n\t\t\t\t\t(m as any).my_reactions = mine;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch {}\r\n\r\n\t\tlet dmReadStatuses: Array<{ user_id: number; last_read_timestamp: string; username: string }> = [];\r\n\t\ttry {\r\n\t\t\tconst readRes = await c.env.DB.prepare(\r\n\t\t\t\t'SELECT urs.user_id, urs.last_read_timestamp, u.full_name as username FROM user_read_status urs JOIN users u ON u.id = urs.user_id WHERE urs.channel_id = ?'\r\n\t\t\t).bind(dmId).all();\r\n\t\t\tdmReadStatuses = (readRes.results as any[])?.map(r => ({\r\n\t\t\t\tuser_id: Number((r as any).user_id),\r\n\t\t\t\tlast_read_timestamp: (r as any).last_read_timestamp,\r\n\t\t\t\tusername: (r as any).username,\r\n\t\t\t})) || [];\r\n\t\t} catch {}\r\n\r\n\t\ttry {\r\n\t\t\tconst otherId = userId === user1Id ? user2Id : user1Id;\r\n\t\t\tconst otherReadRow = await c.env.DB.prepare('SELECT last_read_timestamp FROM user_read_status WHERE user_id = ? AND channel_id = ?')\r\n\t\t\t\t.bind(otherId, dmId)\r\n\t\t\t\t.first();\r\n\t\t\tconst otherLastRead: string | null = (otherReadRow as any)?.last_read_timestamp || null;\r\n\t\t\tif (otherLastRead) {\r\n\t\t\t\tconst otherReadTime = new Date(otherLastRead).getTime();\r\n\t\t\t\tfor (const r of results as any[]) {\r\n\t\t\t\t\tif (r.sender_id === userId) {\r\n\t\t\t\t\t\t(r as any).read_by_any = otherReadTime >= new Date(r.timestamp).getTime() ? 1 : 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (const r of results as any[]) if (r.sender_id === userId) (r as any).read_by_any = 0;\r\n\t\t\t}\r\n\t\t} catch {}\r\n\r\n\t\ttry {\r\n\t\t\tif (Array.isArray(results) && dmReadStatuses.length > 0) {\r\n\t\t\t\tfor (const r of results as any[]) {\r\n\t\t\t\t\tconst msgTime = new Date(r.timestamp).getTime();\r\n\t\t\t\t\tconst readers = dmReadStatuses\r\n\t\t\t\t\t\t.filter(s => s.user_id !== Number(r.sender_id) && new Date(s.last_read_timestamp).getTime() >= msgTime)\r\n\t\t\t\t\t\t.map(s => ({ user_id: s.user_id, username: s.username, read_at: s.last_read_timestamp }));\r\n\t\t\t\t\t(r as any).readers = readers;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch {}\r\n\r\n\t\tif ((results as any[]).length > 0) {\r\n\t\t\ttry {\r\n\t\t\t\tconst timestamp = new Date().toISOString();\r\n\t\t\t\tawait c.env.DB.prepare(\r\n\t\t\t\t\t`INSERT INTO user_read_status (user_id, channel_id, last_read_timestamp)\r\n\t\t\t\t\t VALUES (?, ?, ?)\r\n\t\t\t\t\t ON CONFLICT(user_id, channel_id) DO UPDATE SET last_read_timestamp = excluded.last_read_timestamp`\r\n\t\t\t\t).bind(userId, dmId, timestamp).run();\r\n\t\t\t} catch {}\r\n\t\t}\r\n\r\n\t\treturn new Response(JSON.stringify(results), { headers: { 'Content-Type': 'application/json' } });\r\n\t} catch {\r\n\t\treturn new Response('Error fetching DM messages', { status: 500 });\r\n\t}\r\n}\r\n\r\nexport async function sendDMMessage(c: Context): Promise<Response> {\r\n\tconst { dmId } = c.req.param();\r\n\tconst userIdStr = c.req.query('user_id');\r\n\tconst userIdFromQuery = userIdStr ? Number(userIdStr) : undefined;\r\n\tif (!dmId || !dmId.startsWith('dm_')) return new Response('Invalid DM ID', { status: 400 });\r\n\ttry {\r\n\t\tconst { content, sender_id } = await c.req.json();\r\n\t\tif (!content || !sender_id) return new Response('Content and sender_id are required', { status: 400 });\r\n\t\tconst effectiveUserId = userIdFromQuery || Number(sender_id);\r\n\t\tif (!effectiveUserId) return new Response('Unauthorized', { status: 401 });\r\n\r\n\t\tconst dmParts = dmId.split('_');\r\n\t\tif (dmParts.length !== 3) return new Response('Invalid DM ID format', { status: 400 });\r\n\t\tconst user1Id = parseInt(dmParts[1]);\r\n\t\tconst user2Id = parseInt(dmParts[2]);\r\n\t\tif (sender_id !== user1Id && sender_id !== user2Id) return new Response('Unauthorized', { status: 403 });\r\n\r\n\t\tconst timestamp = new Date().toISOString();\r\n\t\tconst result = await c.env.DB.prepare(\r\n\t\t\t'INSERT INTO messages (channel_id, sender_id, content, timestamp) VALUES (?, ?, ?, ?)'\r\n\t\t).bind(dmId, sender_id, content, timestamp).run();\r\n\t\tif (result.success) {\r\n\t\t\ttry {\r\n\t\t\t\tawait c.env.DB.prepare(\r\n\t\t\t\t\t`INSERT INTO user_read_status (user_id, channel_id, last_read_timestamp)\r\n\t\t\t\t\t VALUES (?, ?, ?)\r\n\t\t\t\t\t ON CONFLICT(user_id, channel_id) DO UPDATE SET last_read_timestamp = excluded.last_read_timestamp`\r\n\t\t\t\t).bind(sender_id, dmId, timestamp).run();\r\n\t\t\t} catch {}\r\n\t\t\treturn new Response(JSON.stringify({ message: 'DM message sent' }), { status: 201, headers: { 'Content-Type': 'application/json' } });\r\n\t\t}\r\n\t\treturn new Response('Failed to send DM message', { status: 500 });\r\n\t} catch {\r\n\t\treturn new Response('Error sending DM message', { status: 500 });\r\n\t}\r\n}\r\n\r\n", "import { Context } from 'hono';\r\nimport { D1Database } from '@cloudflare/workers-types';\r\n\r\ninterface Env { DB: D1Database }\r\n\r\nexport async function getChannels(c: Context): Promise<Response> {\r\n  try {\r\n    const userIdStr = c.req.query('user_id');\r\n    let channels;\r\n    if (userIdStr) {\r\n      const userId = Number(userIdStr);\r\n      const adminRow = await c.env.DB.prepare('SELECT is_admin FROM users WHERE id = ?').bind(userId).first();\r\n      const isAdmin = adminRow && (adminRow as { is_admin: number }).is_admin === 1;\r\n      if (isAdmin) {\r\n        const { results } = await c.env.DB.prepare('SELECT * FROM channels WHERE id NOT LIKE \"dm_%\" AND id NOT LIKE \"group_%\" ORDER BY position ASC').all();\r\n        channels = results;\r\n      } else {\r\n        const { results } = await c.env.DB.prepare(\r\n          `SELECT DISTINCT channels.*\r\n           FROM channels\r\n           LEFT JOIN channel_members ON channels.id = channel_members.channel_id AND channel_members.user_id = ?\r\n           WHERE channels.id NOT LIKE \"dm_%\" AND channels.id NOT LIKE \"group_%\" AND (channels.is_private = 0 OR channel_members.user_id = ?)\r\n           ORDER BY channels.position ASC`\r\n        ).bind(userId, userId).all();\r\n        channels = results;\r\n      }\r\n    } else {\r\n      const { results } = await c.env.DB.prepare('SELECT * FROM channels WHERE is_private = 0 AND id NOT LIKE \"dm_%\" AND id NOT LIKE \"group_%\" ORDER BY position ASC').all();\r\n      channels = results;\r\n    }\r\n    return new Response(JSON.stringify(channels), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch (e) {\r\n    return new Response('Error fetching channels', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function createChannel(c: Context): Promise<Response> {\r\n  try {\r\n    const { id, name, created_by, is_private = false, members = [] } = await c.req.json();\r\n    if (!id || !name) return new Response('Channel ID and name are required', { status: 400 });\r\n    const existing = await c.env.DB.prepare('SELECT id FROM channels WHERE id = ?').bind(id).first();\r\n    if (existing) return new Response('Channel ID already exists', { status: 409 });\r\n    const positionRow = await c.env.DB.prepare('SELECT COALESCE(MAX(position), 0) as max_pos FROM channels').first();\r\n    const position = positionRow ? (positionRow as any).max_pos + 1 : 1;\r\n    const now = new Date().toISOString();\r\n    const result = await c.env.DB.prepare(\r\n      'INSERT INTO channels (id, name, created_by, created_at, updated_at, position, is_private) VALUES (?, ?, ?, ?, ?, ?, ?)'\r\n    ).bind(id, name, created_by, now, now, position, is_private ? 1 : 0).run();\r\n    if (!result.success) return new Response('Failed to create channel', { status: 500 });\r\n\r\n    if (is_private) {\r\n      const memberIds: number[] = Array.isArray(members) ? [...members] : [];\r\n      if (created_by && !memberIds.includes(Number(created_by))) memberIds.push(Number(created_by));\r\n      for (const m of memberIds) {\r\n        try { await c.env.DB.prepare('INSERT INTO channel_members (channel_id, user_id) VALUES (?, ?)').bind(id, m).run(); } catch {}\r\n      }\r\n    }\r\n    return new Response(JSON.stringify({ message: 'Channel created', id, name, position, is_private }), { status: 201, headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error creating channel', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function updateChannel(c: Context): Promise<Response> {\r\n  try {\r\n    const { channelId } = c.req.param();\r\n    const { name, is_private, members = [] } = await c.req.json();\r\n    if (!name) return new Response('Channel name is required', { status: 400 });\r\n    const now = new Date().toISOString();\r\n    const result = await c.env.DB.prepare('UPDATE channels SET name = ?, is_private = ?, updated_at = ? WHERE id = ?').bind(name, is_private ? 1 : 0, now, channelId).run();\r\n    if (!result.success) return new Response('Channel not found', { status: 404 });\r\n    await c.env.DB.prepare('DELETE FROM channel_members WHERE channel_id = ?').bind(channelId).run();\r\n    if (is_private && Array.isArray(members)) {\r\n      for (const m of members) { try { await c.env.DB.prepare('INSERT INTO channel_members (channel_id, user_id) VALUES (?, ?)').bind(channelId, m).run(); } catch {} }\r\n    }\r\n    return new Response(JSON.stringify({ message: 'Channel updated', id: channelId, name, is_private }), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error updating channel', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function deleteChannel(c: Context): Promise<Response> {\r\n  try {\r\n    const { channelId } = c.req.param();\r\n    if (channelId === 'general') return new Response('Cannot delete the general channel', { status: 403 });\r\n    await c.env.DB.prepare('DELETE FROM channel_members WHERE channel_id = ?').bind(channelId).run();\r\n    await c.env.DB.prepare('DELETE FROM messages WHERE channel_id = ?').bind(channelId).run();\r\n    const result = await c.env.DB.prepare('DELETE FROM channels WHERE id = ?').bind(channelId).run();\r\n    if (!result.success) return new Response('Channel not found', { status: 404 });\r\n    return new Response(JSON.stringify({ message: 'Channel deleted' }), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error deleting channel', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function reorderChannels(c: Context): Promise<Response> {\r\n  try {\r\n    const { channels } = await c.req.json() as { channels: { id: string, position: number }[] };\r\n    if (!channels || !Array.isArray(channels) || channels.length === 0) return new Response('Channels array is required', { status: 400 });\r\n    for (const ch of channels) {\r\n      await c.env.DB.prepare('UPDATE channels SET position = ? WHERE id = ?').bind(ch.position, ch.id).run();\r\n    }\r\n    const { results } = await c.env.DB.prepare('SELECT * FROM channels ORDER BY position ASC').all();\r\n    return new Response(JSON.stringify({ message: 'Channels reordered', channels: results }), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error reordering channels', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function getGroupChats(c: Context): Promise<Response> {\r\n  try {\r\n    const userIdStr = c.req.query('user_id');\r\n    if (!userIdStr) return new Response('User ID is required', { status: 400 });\r\n    const userId = Number(userIdStr);\r\n    const { results } = await c.env.DB.prepare(\r\n      `SELECT DISTINCT channels.*, COALESCE(MAX(messages.timestamp), channels.created_at) as last_activity\r\n       FROM channels \r\n       JOIN channel_members ON channels.id = channel_members.channel_id \r\n       LEFT JOIN messages ON channels.id = messages.channel_id\r\n       WHERE channels.id LIKE 'group_%' AND channel_members.user_id = ?\r\n       GROUP BY channels.id, channels.name, channels.created_by, channels.created_at, channels.updated_at, channels.position, channels.is_private\r\n       ORDER BY last_activity DESC`\r\n    ).bind(userId).all();\r\n    return new Response(JSON.stringify(results), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error fetching group chats', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function createGroupChat(c: Context): Promise<Response> {\r\n  try {\r\n    const { name, created_by, members = [] } = await c.req.json();\r\n    if (!name || !created_by) return new Response('Group name and creator ID are required', { status: 400 });\r\n    if (!Array.isArray(members) || members.length === 0) return new Response('At least one member is required', { status: 400 });\r\n    const groupId = `group_${Date.now()}_${Math.random().toString(36).substring(2, 8)}`;\r\n    const now = new Date().toISOString();\r\n    const result = await c.env.DB.prepare('INSERT INTO channels (id, name, created_by, created_at, updated_at, position, is_private) VALUES (?, ?, ?, ?, ?, ?, 1)')\r\n      .bind(groupId, name, created_by, now, now, 0).run();\r\n    if (!result.success) return new Response('Failed to create group chat', { status: 500 });\r\n    const memberIds: number[] = [...members];\r\n    if (!memberIds.includes(Number(created_by))) memberIds.push(Number(created_by));\r\n    for (const m of memberIds) { try { await c.env.DB.prepare('INSERT INTO channel_members (channel_id, user_id) VALUES (?, ?)').bind(groupId, m).run(); } catch {} }\r\n    return new Response(JSON.stringify({ message: 'Group chat created', id: groupId, name, members: memberIds }), { status: 201, headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error creating group chat', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function updateGroupChat(c: Context): Promise<Response> {\r\n  try {\r\n    const { groupId } = c.req.param();\r\n    const { name, members = [] } = await c.req.json();\r\n    if (!name) return new Response('Group name is required', { status: 400 });\r\n    const now = new Date().toISOString();\r\n    const result = await c.env.DB.prepare('UPDATE channels SET name = ?, updated_at = ? WHERE id = ?').bind(name, now, groupId).run();\r\n    if (!result.success) return new Response('Group chat not found', { status: 404 });\r\n    if (Array.isArray(members) && members.length > 0) {\r\n      await c.env.DB.prepare('DELETE FROM channel_members WHERE channel_id = ?').bind(groupId).run();\r\n      for (const m of members) { try { await c.env.DB.prepare('INSERT INTO channel_members (channel_id, user_id) VALUES (?, ?)').bind(groupId, m).run(); } catch {} }\r\n    }\r\n    return new Response(JSON.stringify({ message: 'Group chat updated', id: groupId, name, members }), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error updating group chat', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function getChannelMembers(c: Context): Promise<Response> {\r\n  try {\r\n    const { channelId } = c.req.param();\r\n    const { results } = await c.env.DB.prepare(\r\n      `SELECT channel_members.user_id, users.full_name as username \r\n       FROM channel_members \r\n       JOIN users ON channel_members.user_id = users.id \r\n       WHERE channel_members.channel_id = ?`\r\n    ).bind(channelId).all();\r\n    return new Response(JSON.stringify(results), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error fetching channel members', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function deleteGroupChat(c: Context): Promise<Response> {\r\n  try {\r\n    const { groupId } = c.req.param();\r\n    if (!groupId.startsWith('group_')) return new Response('Invalid group ID', { status: 400 });\r\n    await c.env.DB.prepare('DELETE FROM channel_members WHERE channel_id = ?').bind(groupId).run();\r\n    await c.env.DB.prepare('DELETE FROM messages WHERE channel_id = ?').bind(groupId).run();\r\n    const result = await c.env.DB.prepare('DELETE FROM channels WHERE id = ?').bind(groupId).run();\r\n    if (!result.success) return new Response('Group chat not found', { status: 404 });\r\n    return new Response(JSON.stringify({ message: 'Group chat deleted' }), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error deleting group chat', { status: 500 });\r\n  }\r\n}\r\n", "import { Context } from 'hono';\r\n\r\nexport async function markChannelAsRead(c: Context): Promise<Response> {\r\n  try {\r\n    const { channelId } = c.req.param();\r\n    const { user_id } = await c.req.json();\r\n    if (!user_id || !channelId) return new Response('User ID and Channel ID are required', { status: 400 });\r\n    const timestamp = new Date().toISOString();\r\n    await c.env.DB.prepare(\r\n      `INSERT INTO user_read_status (user_id, channel_id, last_read_timestamp)\r\n       VALUES (?, ?, ?)\r\n       ON CONFLICT(user_id, channel_id) DO UPDATE SET last_read_timestamp = excluded.last_read_timestamp`\r\n    ).bind(user_id, channelId, timestamp).run();\r\n    return new Response(JSON.stringify({ success: true, timestamp }), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error marking channel as read', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function getAllNotificationData(c: Context): Promise<Response> {\r\n  try {\r\n    const userIdStr = c.req.query('user_id');\r\n    if (!userIdStr) return new Response('User ID is required', { status: 400 });\r\n    const userId = Number(userIdStr);\r\n    const { results: channels } = await c.env.DB.prepare(\r\n      `SELECT DISTINCT channels.*\r\n       FROM channels\r\n       LEFT JOIN channel_members ON channels.id = channel_members.channel_id AND channel_members.user_id = ?\r\n       WHERE channels.id NOT LIKE \"dm_%\" AND channels.id NOT LIKE \"group_%\" \r\n         AND (channels.is_private = 0 OR channel_members.user_id = ?)\r\n       ORDER BY channels.position ASC`\r\n    ).bind(userId, userId).all();\r\n\r\n    const { results: dmConversations } = await c.env.DB.prepare(\r\n      `SELECT DISTINCT channel_id FROM messages WHERE channel_id LIKE 'dm_%' AND (channel_id LIKE 'dm_' || ? || '_%' OR channel_id LIKE 'dm_%_' || ?)`\r\n    ).bind(userIdStr, userIdStr).all();\r\n\r\n    const { results: groupChats } = await c.env.DB.prepare(\r\n      `SELECT DISTINCT channels.* FROM channels LEFT JOIN channel_members ON channels.id = channel_members.channel_id WHERE channels.id LIKE \"group_%\" AND channel_members.user_id = ?`\r\n    ).bind(userId).all();\r\n\r\n    const allChannelIds = [\r\n      ...channels.map((c: any) => c.id),\r\n      ...dmConversations.map((dm: any) => dm.channel_id),\r\n      ...groupChats.map((g: any) => g.id)\r\n    ];\r\n\r\n    const unreadCounts: Record<string, number> = {};\r\n    let channelsUnread = 0;\r\n    let messagesUnread = 0;\r\n    for (const channelId of allChannelIds) {\r\n      try {\r\n        const readStatus = await c.env.DB.prepare('SELECT last_read_timestamp FROM user_read_status WHERE user_id = ? AND channel_id = ?')\r\n          .bind(userId, channelId).first();\r\n        const lastReadTimestamp = (readStatus as any)?.last_read_timestamp || '1970-01-01T00:00:00.000Z';\r\n        const unreadResult = await c.env.DB.prepare(\r\n          `SELECT COUNT(*) as count FROM messages WHERE channel_id = ? AND timestamp > ? AND sender_id != ?`\r\n        ).bind(channelId, lastReadTimestamp, userId).first();\r\n        const count = (unreadResult as any)?.count || 0;\r\n        if (count > 0) {\r\n          unreadCounts[channelId] = count;\r\n          if (channelId.startsWith('dm_') || channelId.startsWith('group_')) messagesUnread += count; else channelsUnread += count;\r\n        }\r\n      } catch {}\r\n    }\r\n    return new Response(JSON.stringify({ unreadCounts, totalUnread: channelsUnread + messagesUnread, channelsUnread, messagesUnread }), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error getting notification data', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function getUnreadCounts(c: Context): Promise<Response> {\r\n  try {\r\n    const userIdStr = c.req.query('user_id');\r\n    if (!userIdStr) return new Response('User ID is required', { status: 400 });\r\n    const userId = Number(userIdStr);\r\n    const { results: channels } = await c.env.DB.prepare(\r\n      `SELECT DISTINCT channels.*\r\n       FROM channels\r\n       LEFT JOIN channel_members ON channels.id = channel_members.channel_id AND channel_members.user_id = ?\r\n       WHERE channels.id NOT LIKE \"dm_%\" AND channels.id NOT LIKE \"group_%\" \r\n         AND (channels.is_private = 0 OR channel_members.user_id = ?)\r\n       ORDER BY channels.position ASC`\r\n    ).bind(userId, userId).all();\r\n    const { results: dmConversations } = await c.env.DB.prepare(\r\n      `SELECT DISTINCT channel_id FROM messages WHERE channel_id LIKE 'dm_%' AND (channel_id LIKE 'dm_' || ? || '_%' OR channel_id LIKE 'dm_%_' || ?)`\r\n    ).bind(userIdStr, userIdStr).all();\r\n    const { results: groupChats } = await c.env.DB.prepare(\r\n      `SELECT DISTINCT channels.* FROM channels LEFT JOIN channel_members ON channels.id = channel_members.channel_id WHERE channels.id LIKE \"group_%\" AND channel_members.user_id = ?`\r\n    ).bind(userId).all();\r\n    const allChannelIds = [\r\n      ...channels.map((c: any) => c.id),\r\n      ...dmConversations.map((dm: any) => dm.channel_id),\r\n      ...groupChats.map((g: any) => g.id)\r\n    ];\r\n    const unreadCounts: Record<string, number> = {};\r\n    for (const channelId of allChannelIds) {\r\n      try {\r\n        const readStatus = await c.env.DB.prepare('SELECT last_read_timestamp FROM user_read_status WHERE user_id = ? AND channel_id = ?')\r\n          .bind(userId, channelId).first();\r\n        const lastReadTimestamp = (readStatus as any)?.last_read_timestamp || '1970-01-01T00:00:00.000Z';\r\n        const unreadResult = await c.env.DB.prepare(\r\n          `SELECT COUNT(*) as count FROM messages WHERE channel_id = ? AND timestamp > ? AND sender_id != ?`\r\n        ).bind(channelId, lastReadTimestamp, userId).first();\r\n        const count = (unreadResult as any)?.count || 0;\r\n        if (count > 0) unreadCounts[channelId] = count;\r\n      } catch {}\r\n    }\r\n    return new Response(JSON.stringify(unreadCounts), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error getting unread counts', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function getTotalUnreadCount(c: Context): Promise<Response> {\r\n  try {\r\n    const userIdStr = c.req.query('user_id');\r\n    if (!userIdStr) return new Response('User ID is required', { status: 400 });\r\n    const userId = Number(userIdStr);\r\n    const { results: regularChannels } = await c.env.DB.prepare(\r\n      `SELECT DISTINCT channels.id as channel_id\r\n       FROM channels\r\n       LEFT JOIN channel_members ON channels.id = channel_members.channel_id AND channel_members.user_id = ?\r\n       WHERE channels.id NOT LIKE \"dm_%\" AND channels.id NOT LIKE \"group_%\" \r\n         AND (channels.is_private = 0 OR channel_members.user_id = ?)`\r\n    ).bind(userId, userId).all();\r\n    const { results: dmConversations } = await c.env.DB.prepare(\r\n      `SELECT DISTINCT channel_id FROM messages WHERE channel_id LIKE 'dm_%' AND (channel_id LIKE 'dm_' || ? || '_%' OR channel_id LIKE 'dm_%_' || ?)`\r\n    ).bind(userIdStr, userIdStr).all();\r\n    const { results: groupChats } = await c.env.DB.prepare(\r\n      `SELECT DISTINCT channels.id as channel_id FROM channels LEFT JOIN channel_members ON channels.id = channel_members.channel_id WHERE channels.id LIKE \"group_%\" AND channel_members.user_id = ?`\r\n    ).bind(userId).all();\r\n    let channelsUnread = 0; let messagesUnread = 0;\r\n    for (const row of regularChannels as any[]) {\r\n      const channelId = row.channel_id;\r\n      try {\r\n        const readStatus = await c.env.DB.prepare('SELECT last_read_timestamp FROM user_read_status WHERE user_id = ? AND channel_id = ?')\r\n          .bind(userId, channelId).first();\r\n        const lastReadTimestamp = (readStatus as any)?.last_read_timestamp || '1970-01-01T00:00:00.000Z';\r\n        const unreadResult = await c.env.DB.prepare(\r\n          `SELECT COUNT(*) as count FROM messages WHERE channel_id = ? AND timestamp > ? AND sender_id != ?`\r\n        ).bind(channelId, lastReadTimestamp, userId).first();\r\n        channelsUnread += (unreadResult as any)?.count || 0;\r\n      } catch {}\r\n    }\r\n    const allMessages = [...dmConversations, ...groupChats];\r\n    for (const row of allMessages as any[]) {\r\n      const channelId = row.channel_id;\r\n      try {\r\n        const readStatus = await c.env.DB.prepare('SELECT last_read_timestamp FROM user_read_status WHERE user_id = ? AND channel_id = ?')\r\n          .bind(userId, channelId).first();\r\n        const lastReadTimestamp = (readStatus as any)?.last_read_timestamp || '1970-01-01T00:00:00.000Z';\r\n        const unreadResult = await c.env.DB.prepare(\r\n          `SELECT COUNT(*) as count FROM messages WHERE channel_id = ? AND timestamp > ? AND sender_id != ?`\r\n        ).bind(channelId, lastReadTimestamp, userId).first();\r\n        messagesUnread += (unreadResult as any)?.count || 0;\r\n      } catch {}\r\n    }\r\n    return new Response(JSON.stringify({ totalUnread: channelsUnread + messagesUnread, channelsUnread, messagesUnread }), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error getting total unread count', { status: 500 });\r\n  }\r\n}\r\n", "import { Context } from 'hono';\r\n\r\nexport async function getAllUsers(c: Context): Promise<Response> {\r\n  try {\r\n  const { results } = await c.env.DB.prepare('SELECT id, full_name as username, is_admin, avatar_color FROM users ORDER BY full_name ASC').all();\r\n    return new Response(JSON.stringify(results), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch {\r\n    return new Response('Error fetching users', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function getRecentDMUsers(c: Context): Promise<Response> {\r\n  try {\r\n    const userIdStr = c.req.query('user_id');\r\n    const userId = userIdStr ? Number(userIdStr) : undefined;\r\n    if (!userId) return new Response('User ID is required', { status: 400 });\r\n\r\n    // Derive recent DM partners from messages table where channel_id like 'dm_%'\r\n    const dmLike = 'dm_%';\r\n    const { results } = await c.env.DB.prepare(\r\n      `WITH dm_msgs AS (\r\n         SELECT channel_id, MAX(timestamp) as last_time\r\n         FROM messages \r\n         WHERE channel_id LIKE ? AND (\r\n           channel_id LIKE ? OR channel_id LIKE ?\r\n         )\r\n         GROUP BY channel_id\r\n       ),\r\n       parts AS (\r\n         SELECT\r\n           channel_id,\r\n           last_time,\r\n           CAST(substr(channel_id, 4, instr(substr(channel_id, 4), '_') - 1) AS INTEGER) as uid1,\r\n           CAST(substr(channel_id, 4 + instr(substr(channel_id, 4), '_')) AS INTEGER) as uid2\r\n         FROM dm_msgs\r\n       )\r\n  SELECT u.id, u.full_name as username, u.is_admin,\r\n    u.avatar_color,\r\n    p.last_time as last_message_time\r\n       FROM parts p\r\n       JOIN users u\r\n         ON (\r\n           CASE WHEN p.uid1 = ? THEN p.uid2 WHEN p.uid2 = ? THEN p.uid1 END\r\n         ) = u.id\r\n       ORDER BY p.last_time DESC`\r\n    ).bind(dmLike, `dm_${userId}_%`, `dm_%_${userId}`, userId, userId).all();\r\n\r\n    // Fallback: if none, return all except current\r\n    if (!results || (results as any[]).length === 0) {\r\n  const { results: all } = await c.env.DB.prepare('SELECT id, full_name as username, is_admin, avatar_color FROM users WHERE id != ? ORDER BY full_name ASC').bind(userId).all();\r\n      return new Response(JSON.stringify(all), { headers: { 'Content-Type': 'application/json' } });\r\n    }\r\n    return new Response(JSON.stringify(results), { headers: { 'Content-Type': 'application/json' } });\r\n  } catch (e) {\r\n    return new Response('Error fetching recent users', { status: 500 });\r\n  }\r\n}\r\n", "import { Hono } from 'hono';\r\nimport { getMessages, sendMessage, deleteMessage, getDMMessages, sendDMMessage } from './messages';\r\nimport { Context } from 'hono';\r\nimport { \r\n  getChannels, \r\n  createChannel, \r\n  updateChannel, \r\n  deleteChannel,\r\n  reorderChannels,\r\n  getChannelMembers,\r\n  getGroupChats,\r\n  createGroupChat,\r\n  updateGroupChat,\r\n  deleteGroupChat\r\n} from './channels';\r\nimport { markChannelAsRead, getUnreadCounts, getTotalUnreadCount, getAllNotificationData } from './notifications';\r\nimport { getAllUsers, getRecentDMUsers } from './users';\r\n\r\nconst chat = new Hono();\r\n\r\n// Messages endpoints\r\nchat.get('/messages/:channelId', getMessages);\r\nchat.post('/messages/:channelId', sendMessage);\r\nchat.delete('/messages/:messageId', deleteMessage);\r\n\r\n// Direct Messages endpoints\r\nchat.get('/messages/dm/:dmId', getDMMessages);\r\nchat.post('/messages/dm/:dmId', sendDMMessage);\r\n\r\n// Reactions\r\nchat.post('/messages/:messageId/reactions/:reactionKey/toggle', async (c: Context) => {\r\n  const { messageId, reactionKey } = c.req.param();\r\n  const userIdStr = c.req.query('user_id');\r\n  const userId = userIdStr ? Number(userIdStr) : undefined;\r\n  if (!userId) return c.json({ error: 'User ID is required' }, 400);\r\n  try {\r\n    // Check message exists and determine channel id to validate access if private/group\r\n    const msg = await c.env.DB.prepare('SELECT channel_id FROM messages WHERE id = ?').bind(messageId).first();\r\n    if (!msg) return c.json({ error: 'Message not found' }, 404);\r\n    const channelId = (msg as any).channel_id as string;\r\n    if (channelId && !channelId.startsWith('dm_')) {\r\n      // If it's a channel/group, ensure user is allowed when private\r\n      const chan = await c.env.DB.prepare('SELECT is_private FROM channels WHERE id = ?').bind(channelId).first();\r\n      if (!chan) return c.json({ error: 'Channel not found' }, 404);\r\n      const isPrivate = (chan as any).is_private === 1;\r\n      if (isPrivate) {\r\n        const adm = await c.env.DB.prepare('SELECT is_admin FROM users WHERE id = ?').bind(userId).first();\r\n        const isAdmin = !!adm && (adm as any).is_admin === 1;\r\n        if (!isAdmin) {\r\n          const mem = await c.env.DB.prepare('SELECT 1 FROM channel_members WHERE channel_id = ? AND user_id = ?').bind(channelId, userId).first();\r\n          if (!mem) return c.json({ error: 'Forbidden' }, 403);\r\n        }\r\n      }\r\n    } else if (channelId && channelId.startsWith('dm_')) {\r\n      // Validate DM membership\r\n      const parts = channelId.split('_');\r\n      if (parts.length !== 3) return c.json({ error: 'Invalid DM' }, 400);\r\n      const u1 = parseInt(parts[1]);\r\n      const u2 = parseInt(parts[2]);\r\n      if (userId !== u1 && userId !== u2) return c.json({ error: 'Forbidden' }, 403);\r\n    }\r\n\r\n    const existing = await c.env.DB.prepare('SELECT 1 FROM message_reactions WHERE message_id = ? AND user_id = ? AND reaction_key = ?')\r\n      .bind(messageId, userId, reactionKey)\r\n      .first();\r\n    if (existing) {\r\n      await c.env.DB.prepare('DELETE FROM message_reactions WHERE message_id = ? AND user_id = ? AND reaction_key = ?')\r\n        .bind(messageId, userId, reactionKey)\r\n        .run();\r\n      return c.json({ toggled: 'off' });\r\n    } else {\r\n      await c.env.DB.prepare('INSERT INTO message_reactions (message_id, user_id, reaction_key, created_at) VALUES (?, ?, ?, ?)')\r\n        .bind(messageId, userId, reactionKey, new Date().toISOString())\r\n        .run();\r\n      return c.json({ toggled: 'on' });\r\n    }\r\n  } catch (e) {\r\n    return c.json({ error: 'Failed to toggle reaction' }, 500);\r\n  }\r\n});\r\n\r\n// Channels endpoints\r\nchat.get('/channels', getChannels);\r\nchat.post('/channels', createChannel);\r\nchat.put('/channels/:channelId', updateChannel);\r\nchat.delete('/channels/:channelId', deleteChannel);\r\nchat.get('/channels/:channelId/members', getChannelMembers);\r\nchat.post('/channels/reorder', reorderChannels);\r\n\r\n// Group chat endpoints\r\nchat.get('/groups', getGroupChats);\r\nchat.post('/groups', createGroupChat);\r\nchat.put('/groups/:groupId', updateGroupChat);\r\nchat.delete('/groups/:groupId', deleteGroupChat);\r\n\r\n// Notifications endpoints\r\nchat.post('/notifications/read/:channelId', markChannelAsRead);\r\nchat.get('/notifications/all', getAllNotificationData);\r\nchat.get('/notifications/unread', getUnreadCounts);\r\nchat.get('/notifications/total', getTotalUnreadCount);\r\n\r\n// Users (for DMs)\r\nchat.get('/users', getAllUsers);\r\nchat.get('/users/recent', getRecentDMUsers);\r\n\r\nexport default chat;\r\n", "import { Hono } from 'hono';\r\nimport { verify } from 'hono/jwt';\r\n\r\ntype Env = { DB: any; JWT_SECRET: string };\r\ntype JwtUser = { id: number; name: string; isAdmin: boolean };\r\n\r\nconst admin = new Hono<{ Bindings: Env }>();\r\n\r\nasync function getAuthUser(c: any): Promise<JwtUser | null> {\r\n  const auth = c.req.header('Authorization');\r\n  if (!auth || !auth.startsWith('Bearer ')) return null;\r\n  try {\r\n    const token = auth.split(' ')[1];\r\n    const decoded = await verify(token, c.env.JWT_SECRET);\r\n    // decoded is any; normalize\r\n    return {\r\n      id: Number((decoded as any).id),\r\n      name: String((decoded as any).name || ''),\r\n      isAdmin: !!(decoded as any).isAdmin,\r\n    };\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function sha256(text: string): Promise<string> {\r\n  const data = new TextEncoder().encode(text);\r\n  const hash = await crypto.subtle.digest('SHA-256', data);\r\n  return Array.from(new Uint8Array(hash)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\n// List users (admin only)\r\nadmin.get('/users', async (c) => {\r\n  const au = await getAuthUser(c);\r\n  if (!au || !au.isAdmin) return c.json({ error: 'Forbidden' }, 403);\r\n  try {\r\n    const { results } = await c.env.DB\r\n      .prepare('SELECT id, full_name as username, is_admin, created_at, avatar_color FROM users ORDER BY full_name ASC')\r\n      .all();\r\n    return c.json(results);\r\n  } catch (e) {\r\n    console.error('Failed to load users', e);\r\n    return c.json({ error: 'Failed to load users' }, 500);\r\n  }\r\n});\r\n\r\n// Update user (admin only)\r\nadmin.put('/users/:userId', async (c) => {\r\n  const au = await getAuthUser(c);\r\n  if (!au || !au.isAdmin) return c.json({ error: 'Forbidden' }, 403);\r\n  const userId = Number(c.req.param('userId'));\r\n  if (!Number.isFinite(userId)) return c.json({ error: 'Invalid user id' }, 400);\r\n\r\n  let body: any;\r\n  try {\r\n    body = await c.req.json();\r\n  } catch {\r\n    return c.json({ error: 'Invalid JSON' }, 400);\r\n  }\r\n\r\n  // Prevent changing your own admin status\r\n  if (userId === au.id && typeof body.is_admin !== 'undefined') {\r\n    return c.json({ error: 'Cannot modify your own admin status' }, 400);\r\n  }\r\n\r\n  const updates: string[] = [];\r\n  const values: any[] = [];\r\n\r\n  // Admin flag\r\n  if (typeof body.is_admin !== 'undefined') {\r\n    updates.push('is_admin = ?');\r\n    values.push(body.is_admin ? 1 : 0);\r\n  }\r\n\r\n  // Username/full name change - accept either field name\r\n  const newName: string | undefined = (body.fullName ?? body.username)?.toString()?.trim();\r\n  if (newName) {\r\n    // Ensure unique name (excluding target user)\r\n    const existing = await c.env.DB\r\n      .prepare('SELECT id FROM users WHERE full_name = ? AND id != ?')\r\n      .bind(newName, userId)\r\n      .first();\r\n    if (existing) return c.json({ error: 'User already exists' }, 409);\r\n    updates.push('full_name = ?');\r\n    values.push(newName);\r\n  }\r\n\r\n  // Password change\r\n  const newPassword: string | undefined = body.password?.toString()?.trim();\r\n  if (newPassword) {\r\n    if (newPassword.length < 6) return c.json({ error: 'Password must be at least 6 characters' }, 400);\r\n    const hash = await sha256(newPassword);\r\n    updates.push('password_hash = ?');\r\n    values.push(hash);\r\n  }\r\n\r\n  if (updates.length === 0) return c.json({ error: 'No valid fields to update' }, 400);\r\n\r\n  values.push(userId);\r\n  try {\r\n    const sql = `UPDATE users SET ${updates.join(', ')} WHERE id = ?`;\r\n    await c.env.DB.prepare(sql).bind(...values).run();\r\n    return c.json({ success: true });\r\n  } catch (e) {\r\n    console.error('Failed to update user', e);\r\n    return c.json({ error: 'Failed to update user' }, 500);\r\n  }\r\n});\r\n\r\n// Delete user (admin only)\r\nadmin.delete('/users/:userId', async (c) => {\r\n  const au = await getAuthUser(c);\r\n  if (!au || !au.isAdmin) return c.json({ error: 'Forbidden' }, 403);\r\n  const userId = Number(c.req.param('userId'));\r\n  if (!Number.isFinite(userId)) return c.json({ error: 'Invalid user id' }, 400);\r\n  if (userId === au.id) return c.json({ error: 'Cannot delete your own account' }, 400);\r\n  try {\r\n    await c.env.DB.prepare('DELETE FROM users WHERE id = ?').bind(userId).run();\r\n    return c.json({ success: true });\r\n  } catch (e) {\r\n    console.error('Failed to delete user', e);\r\n    return c.json({ error: 'Failed to delete user' }, 500);\r\n  }\r\n});\r\n\r\nexport default admin;\r\n", "import { Hono } from 'hono';\r\nimport { verify } from 'hono/jwt';\r\n\r\ntype Env = { DB: any; JWT_SECRET: string };\r\ntype JwtUser = { id: number; name: string; isAdmin: boolean };\r\n\r\nconst calendar = new Hono<{ Bindings: Env }>();\r\n\r\nasync function getAuthUser(c: any): Promise<JwtUser | null> {\r\n  const auth = c.req.header('Authorization');\r\n  if (!auth || !auth.startsWith('Bearer ')) return null;\r\n  try {\r\n    const token = auth.split(' ')[1];\r\n    const decoded = await verify(token, c.env.JWT_SECRET);\r\n    return {\r\n      id: Number((decoded as any).id),\r\n      name: String((decoded as any).name || ''),\r\n      isAdmin: !!(decoded as any).isAdmin,\r\n    };\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\ncalendar.use('*', async (c, next) => {\r\n  const user = await getAuthUser(c);\r\n  if (!user) return c.json({ error: 'Unauthorized' }, 401);\r\n  c.set('user', user);\r\n  await next();\r\n});\r\n\r\n// Utilities copied/adapted from 7790 to generate recurring instances\r\nfunction generateRecurringInstances(baseEvent: any, startDate: Date, endDate: Date): any[] {\r\n  if (!baseEvent.is_recurring) return [baseEvent];\r\n  const instances: any[] = [];\r\n  const eventStartDate = new Date(baseEvent.event_date + 'T00:00:00');\r\n  let currentDate = new Date(Math.max(eventStartDate.getTime(), startDate.getTime()));\r\n  let occurrenceCount = 0;\r\n  const maxOccurrences = baseEvent.recurrence_occurrences || 1000;\r\n\r\n  const config = {\r\n    type: baseEvent.recurrence_type,\r\n    interval: baseEvent.recurrence_interval || 1,\r\n    daysOfWeek: baseEvent.recurrence_days_of_week ? JSON.parse(baseEvent.recurrence_days_of_week) : undefined,\r\n    dayOfMonth: baseEvent.recurrence_day_of_month,\r\n    weekOfMonth: baseEvent.recurrence_week_of_month,\r\n    dayOfWeek: baseEvent.recurrence_day_of_week,\r\n    months: baseEvent.recurrence_months ? JSON.parse(baseEvent.recurrence_months) : undefined,\r\n    endType: baseEvent.recurrence_end_type || 'never',\r\n    endDate: baseEvent.recurrence_end_date,\r\n    occurrences: baseEvent.recurrence_occurrences,\r\n    exceptions: baseEvent.recurrence_exceptions ? JSON.parse(baseEvent.recurrence_exceptions) : []\r\n  } as any;\r\n\r\n  while (currentDate <= endDate && occurrenceCount < maxOccurrences) {\r\n    if (config.endType === 'end_date' && config.endDate) {\r\n      const endDateObj = new Date(config.endDate + 'T00:00:00');\r\n      if (currentDate > endDateObj) break;\r\n    }\r\n\r\n    const dateStr = `${currentDate.getFullYear()}-${String(currentDate.getMonth() + 1).padStart(2, '0')}-${String(currentDate.getDate()).padStart(2, '0')}`;\r\n    if (config.exceptions?.includes(dateStr)) {\r\n      currentDate = getNextOccurrence(currentDate, config);\r\n      continue;\r\n    }\r\n\r\n    if (isValidOccurrence(currentDate, eventStartDate, config)) {\r\n      instances.push({\r\n        ...baseEvent,\r\n        id: `${baseEvent.id}_${dateStr}`,\r\n        event_date: dateStr,\r\n        parent_event_id: baseEvent.id,\r\n        is_recurring_instance: true,\r\n        is_recurring: 0,\r\n      });\r\n      occurrenceCount++;\r\n    }\r\n    currentDate = getNextOccurrence(currentDate, config);\r\n  }\r\n  return instances;\r\n}\r\n\r\nfunction isValidOccurrence(date: Date, startDate: Date, config: any): boolean {\r\n  const daysDiff = Math.floor((date.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\r\n  const DAY_NAMES = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\r\n\r\n  switch (config.type) {\r\n    case 'daily':\r\n      return daysDiff >= 0 && daysDiff % config.interval === 0;\r\n    case 'weekly':\r\n      if (daysDiff < 0) return false;\r\n      const weeksDiff = Math.floor(daysDiff / 7);\r\n      if (weeksDiff % config.interval !== 0) return false;\r\n      if (config.daysOfWeek && config.daysOfWeek.length > 0) {\r\n        const dayName = DAY_NAMES[date.getDay()];\r\n        return config.daysOfWeek.includes(dayName);\r\n      }\r\n      return date.getDay() === startDate.getDay();\r\n    case 'monthly':\r\n      if (daysDiff < 0) return false;\r\n      if (config.dayOfMonth) {\r\n        const monthsDiff = (date.getFullYear() - startDate.getFullYear()) * 12 + (date.getMonth() - startDate.getMonth());\r\n        if (monthsDiff % config.interval !== 0) return false;\r\n        return date.getDate() === config.dayOfMonth;\r\n      }\r\n      return false;\r\n    case 'yearly':\r\n      if (daysDiff < 0) return false;\r\n      const yearsDiff = date.getFullYear() - startDate.getFullYear();\r\n      if (yearsDiff % config.interval !== 0) return false;\r\n      if (config.months && config.months.length > 0) {\r\n        return config.months.includes(date.getMonth() + 1) && date.getDate() === startDate.getDate();\r\n      }\r\n      return date.getMonth() === startDate.getMonth() && date.getDate() === startDate.getDate();\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nfunction getNextOccurrence(currentDate: Date, config: any): Date {\r\n  const nextDate = new Date(currentDate);\r\n  const DAY_NAMES = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\r\n  switch (config.type) {\r\n    case 'daily':\r\n      nextDate.setDate(nextDate.getDate() + config.interval);\r\n      break;\r\n    case 'weekly':\r\n      if (config.daysOfWeek && config.daysOfWeek.length > 1) {\r\n        let found = false;\r\n        for (let i = 1; i <= 7; i++) {\r\n          const testDate = new Date(currentDate);\r\n          testDate.setDate(testDate.getDate() + i);\r\n          const dayName = DAY_NAMES[testDate.getDay()];\r\n          if (config.daysOfWeek.includes(dayName)) { nextDate.setTime(testDate.getTime()); found = true; break; }\r\n        }\r\n        if (!found) nextDate.setDate(nextDate.getDate() + 7 * config.interval);\r\n      } else {\r\n        nextDate.setDate(nextDate.getDate() + 7 * config.interval);\r\n      }\r\n      break;\r\n    case 'monthly':\r\n      nextDate.setMonth(nextDate.getMonth() + config.interval);\r\n      break;\r\n    case 'yearly':\r\n      nextDate.setFullYear(nextDate.getFullYear() + config.interval);\r\n      break;\r\n    default:\r\n      nextDate.setDate(nextDate.getDate() + 1);\r\n  }\r\n  return nextDate;\r\n}\r\n\r\ncalendar.get('/', async (c) => {\r\n  try {\r\n    const startDate = c.req.query('start');\r\n    const endDate = c.req.query('end');\r\n\r\n    let query = `SELECT * FROM calendar_events WHERE (parent_event_id IS NULL OR parent_event_id = 0)`;\r\n    if (startDate && endDate) {\r\n      query += ` AND ((is_recurring = 0 AND event_date BETWEEN ? AND ?) OR (is_recurring = 1 AND (recurrence_end_date IS NULL OR recurrence_end_date >= ? OR event_date <= ?)))`;\r\n    }\r\n    query += ' ORDER BY event_date ASC, event_time ASC';\r\n    const params = startDate && endDate ? [startDate, endDate, startDate, endDate] : [];\r\n    const { results } = await c.env.DB.prepare(query).bind(...params).all();\r\n\r\n    let standaloneInstances: any[] = [];\r\n    if (startDate && endDate) {\r\n      const { results: standalone } = await c.env.DB.prepare(`\r\n        SELECT * FROM calendar_events \r\n        WHERE parent_event_id IS NOT NULL AND parent_event_id != 0 \r\n        AND event_date BETWEEN ? AND ?\r\n        ORDER BY event_date ASC, event_time ASC\r\n      `).bind(startDate, endDate).all();\r\n      standaloneInstances = standalone;\r\n    }\r\n\r\n    if (startDate && endDate) {\r\n      const expanded: any[] = [];\r\n      const start = new Date(startDate + 'T00:00:00');\r\n      const end = new Date(endDate + 'T23:59:59');\r\n      for (const event of results) {\r\n        if (event.is_recurring) {\r\n          expanded.push(...generateRecurringInstances(event, start, end));\r\n        } else {\r\n          expanded.push(event);\r\n        }\r\n      }\r\n      expanded.push(...standaloneInstances);\r\n      return c.json(expanded.sort((a, b) => {\r\n        const dateA = new Date(a.event_date + ' ' + (a.event_time || '00:00'));\r\n        const dateB = new Date(b.event_date + ' ' + (b.event_time || '00:00'));\r\n        return dateA.getTime() - dateB.getTime();\r\n      }));\r\n    }\r\n    return c.json(results);\r\n  } catch (e) {\r\n    console.error('Error fetching calendar events:', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\ncalendar.post('/', async (c) => {\r\n  try {\r\n    const user = c.get('user') as JwtUser;\r\n    const body = await c.req.json();\r\n    const { title, description, event_date, event_time, event_end_time, location, is_recurring, recurrence } = body;\r\n    if (!title || !event_date) return c.json({ error: 'Missing required fields: title, event_date' }, 400);\r\n    if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(event_date)) return c.json({ error: 'Invalid date format. Use YYYY-MM-DD' }, 400);\r\n    if (event_time && !/^\\d{2}:\\d{2}$/.test(event_time)) return c.json({ error: 'Invalid time format. Use HH:MM' }, 400);\r\n    if (event_end_time && !/^\\d{2}:\\d{2}$/.test(event_end_time)) return c.json({ error: 'Invalid end time format. Use HH:MM' }, 400);\r\n\r\n    const rf = is_recurring && recurrence ? {\r\n      is_recurring: 1,\r\n      recurrence_type: recurrence.type,\r\n      recurrence_interval: recurrence.interval || 1,\r\n      recurrence_days_of_week: recurrence.daysOfWeek ? JSON.stringify(recurrence.daysOfWeek) : null,\r\n      recurrence_day_of_month: recurrence.dayOfMonth || null,\r\n      recurrence_week_of_month: recurrence.weekOfMonth || null,\r\n      recurrence_day_of_week: recurrence.dayOfWeek || null,\r\n      recurrence_months: recurrence.months ? JSON.stringify(recurrence.months) : null,\r\n      recurrence_end_type: recurrence.endType || 'never',\r\n      recurrence_end_date: recurrence.endDate || null,\r\n      recurrence_occurrences: recurrence.occurrences || null,\r\n      recurrence_exceptions: recurrence.exceptions ? JSON.stringify(recurrence.exceptions) : null,\r\n    } : {\r\n      is_recurring: 0,\r\n      recurrence_type: null,\r\n      recurrence_interval: null,\r\n      recurrence_days_of_week: null,\r\n      recurrence_day_of_month: null,\r\n      recurrence_week_of_month: null,\r\n      recurrence_day_of_week: null,\r\n      recurrence_months: null,\r\n      recurrence_end_type: null,\r\n      recurrence_end_date: null,\r\n      recurrence_occurrences: null,\r\n      recurrence_exceptions: null,\r\n    };\r\n\r\n    const { success } = await c.env.DB.prepare(`\r\n      INSERT INTO calendar_events (\r\n        title, description, event_date, event_time, event_end_time, location, created_by,\r\n        is_recurring, recurrence_type, recurrence_interval, recurrence_days_of_week,\r\n        recurrence_day_of_month, recurrence_week_of_month, recurrence_day_of_week,\r\n        recurrence_months, recurrence_end_type, recurrence_end_date,\r\n        recurrence_occurrences, recurrence_exceptions\r\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n    `)\r\n      .bind(\r\n        title,\r\n        description || null,\r\n        event_date,\r\n        event_time || null,\r\n        event_end_time || null,\r\n        location || null,\r\n        user.id,\r\n        rf.is_recurring,\r\n        rf.recurrence_type,\r\n        rf.recurrence_interval,\r\n        rf.recurrence_days_of_week,\r\n        rf.recurrence_day_of_month,\r\n        rf.recurrence_week_of_month,\r\n        rf.recurrence_day_of_week,\r\n        rf.recurrence_months,\r\n        rf.recurrence_end_type,\r\n        rf.recurrence_end_date,\r\n        rf.recurrence_occurrences,\r\n        rf.recurrence_exceptions,\r\n      ).run();\r\n\r\n    if (success) return c.json({ message: 'Event created successfully' });\r\n    return c.json({ error: 'Failed to create event' }, 500);\r\n  } catch (e) {\r\n    console.error('Error creating event:', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\ncalendar.get('/:id', async (c) => {\r\n  try {\r\n    const { id } = c.req.param();\r\n    const row = await c.env.DB.prepare('SELECT * FROM calendar_events WHERE id = ?').bind(id).first();\r\n    if (!row) return c.json({ error: 'Event not found' }, 404);\r\n    return c.json(row);\r\n  } catch (e) {\r\n    console.error('Error fetching event:', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\ncalendar.put('/:id', async (c) => {\r\n  try {\r\n    const { id } = c.req.param();\r\n    const body = await c.req.json();\r\n    const { title, description, event_date, event_time, event_end_time, location, is_recurring, recurrence, update_series, original_instance_date } = body;\r\n\r\n    if (!title || !event_date) return c.json({ error: 'Missing required fields: title, event_date' }, 400);\r\n    if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(event_date)) return c.json({ error: 'Invalid date format. Use YYYY-MM-DD' }, 400);\r\n    if (event_time && !/^\\d{2}:\\d{2}$/.test(event_time)) return c.json({ error: 'Invalid time format. Use HH:MM' }, 400);\r\n    if (event_end_time && !/^\\d{2}:\\d{2}$/.test(event_end_time)) return c.json({ error: 'Invalid end time format. Use HH:MM' }, 400);\r\n\r\n    const existing = await c.env.DB.prepare('SELECT * FROM calendar_events WHERE id = ?').bind(id).first();\r\n    if (!existing) return c.json({ error: 'Event not found' }, 404);\r\n\r\n    if (original_instance_date && !update_series) {\r\n      // Editing a single instance: create/update standalone and add exception to parent\r\n      const existingStandalone = await c.env.DB.prepare('SELECT * FROM calendar_events WHERE parent_event_id = ? AND event_date = ?')\r\n        .bind(id, original_instance_date)\r\n        .first();\r\n      if (existingStandalone) {\r\n        const { success } = await c.env.DB.prepare(`\r\n          UPDATE calendar_events SET title=?, description=?, event_date=?, event_time=?, event_end_time=?, location=?, updated_at=CURRENT_TIMESTAMP WHERE id=?\r\n        `).bind(title, description || null, event_date, event_time || null, event_end_time || null, location || null, existingStandalone.id).run();\r\n        return success ? c.json({ message: 'Recurring instance updated successfully' }) : c.json({ error: 'Failed to update recurring instance' }, 500);\r\n      } else {\r\n        const exceptions = existing.recurrence_exceptions ? JSON.parse(existing.recurrence_exceptions as string) : [];\r\n        if (!exceptions.includes(original_instance_date)) exceptions.push(original_instance_date);\r\n        await c.env.DB.prepare('UPDATE calendar_events SET recurrence_exceptions = ?, updated_at=CURRENT_TIMESTAMP WHERE id = ?')\r\n          .bind(JSON.stringify(exceptions), id)\r\n          .run();\r\n        const { success } = await c.env.DB.prepare(`\r\n          INSERT INTO calendar_events (title, description, event_date, event_time, event_end_time, location, created_by, is_recurring, parent_event_id)\r\n          VALUES (?, ?, ?, ?, ?, ?, ?, 0, ?)\r\n        `).bind(title, description || null, event_date, event_time || null, event_end_time || null, location || null, existing.created_by, id).run();\r\n        return success ? c.json({ message: 'Recurring instance updated successfully' }) : c.json({ error: 'Failed to update recurring instance' }, 500);\r\n      }\r\n    } else {\r\n      const rf = is_recurring && recurrence ? {\r\n        is_recurring: 1,\r\n        recurrence_type: recurrence.type,\r\n        recurrence_interval: recurrence.interval || 1,\r\n        recurrence_days_of_week: recurrence.daysOfWeek ? JSON.stringify(recurrence.daysOfWeek) : null,\r\n        recurrence_day_of_month: recurrence.dayOfMonth || null,\r\n        recurrence_week_of_month: recurrence.weekOfMonth || null,\r\n        recurrence_day_of_week: recurrence.dayOfWeek || null,\r\n        recurrence_months: recurrence.months ? JSON.stringify(recurrence.months) : null,\r\n        recurrence_end_type: recurrence.endType || 'never',\r\n        recurrence_end_date: recurrence.endDate || null,\r\n        recurrence_occurrences: recurrence.occurrences || null,\r\n        recurrence_exceptions: existing.recurrence_exceptions,\r\n      } : {\r\n        is_recurring: 0,\r\n        recurrence_type: null,\r\n        recurrence_interval: null,\r\n        recurrence_days_of_week: null,\r\n        recurrence_day_of_month: null,\r\n        recurrence_week_of_month: null,\r\n        recurrence_day_of_week: null,\r\n        recurrence_months: null,\r\n        recurrence_end_type: null,\r\n        recurrence_end_date: null,\r\n        recurrence_occurrences: null,\r\n        recurrence_exceptions: null,\r\n      };\r\n\r\n      const { success } = await c.env.DB.prepare(`\r\n        UPDATE calendar_events SET \r\n          title=?, description=?, event_time=?, event_end_time=?, location=?, updated_at=CURRENT_TIMESTAMP,\r\n          is_recurring=?, recurrence_type=?, recurrence_interval=?, recurrence_days_of_week=?,\r\n          recurrence_day_of_month=?, recurrence_week_of_month=?, recurrence_day_of_week=?,\r\n          recurrence_months=?, recurrence_end_type=?, recurrence_end_date=?, recurrence_occurrences=?, recurrence_exceptions=?\r\n        WHERE id=?\r\n      `).bind(\r\n        title, description || null, event_time || null, event_end_time || null, location || null,\r\n        rf.is_recurring, rf.recurrence_type, rf.recurrence_interval, rf.recurrence_days_of_week,\r\n        rf.recurrence_day_of_month, rf.recurrence_week_of_month, rf.recurrence_day_of_week,\r\n        rf.recurrence_months, rf.recurrence_end_type, rf.recurrence_end_date, rf.recurrence_occurrences, rf.recurrence_exceptions,\r\n        id\r\n      ).run();\r\n      return success ? c.json({ message: 'Event updated successfully' }) : c.json({ error: 'Failed to update event' }, 500);\r\n    }\r\n  } catch (e) {\r\n    console.error('Error updating event:', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\ncalendar.delete('/:id', async (c) => {\r\n  try {\r\n    const { id } = c.req.param();\r\n    const { delete_series, exception_date } = await c.req.json().catch(() => ({}));\r\n    const existing = await c.env.DB.prepare('SELECT * FROM calendar_events WHERE id = ?').bind(id).first();\r\n    if (!existing) return c.json({ error: 'Event not found' }, 404);\r\n\r\n    if (exception_date && !delete_series) {\r\n      const parentId = existing.parent_event_id || id;\r\n      const parent = await c.env.DB.prepare('SELECT * FROM calendar_events WHERE id = ?').bind(parentId).first();\r\n      if (parent) {\r\n        const exceptions = parent.recurrence_exceptions ? JSON.parse(parent.recurrence_exceptions as string) : [];\r\n        if (!exceptions.includes(exception_date)) exceptions.push(exception_date);\r\n        await c.env.DB.prepare('UPDATE calendar_events SET recurrence_exceptions = ? WHERE id = ?')\r\n          .bind(JSON.stringify(exceptions), parentId)\r\n          .run();\r\n        return c.json({ message: 'Event occurrence deleted successfully' });\r\n      }\r\n    }\r\n\r\n    if (delete_series) {\r\n      const { success } = await c.env.DB.prepare('DELETE FROM calendar_events WHERE id = ?').bind(id).run();\r\n      if (success) {\r\n        await c.env.DB.prepare('DELETE FROM calendar_events WHERE parent_event_id = ?').bind(id).run();\r\n        return c.json({ message: 'Event series deleted successfully' });\r\n      }\r\n    } else {\r\n      const { success } = await c.env.DB.prepare('DELETE FROM calendar_events WHERE id = ?').bind(id).run();\r\n      if (success) return c.json({ message: 'Event deleted successfully' });\r\n    }\r\n    return c.json({ error: 'Failed to delete event' }, 500);\r\n  } catch (e) {\r\n    console.error('Error deleting event:', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\ncalendar.post('/:id/exception', async (c) => {\r\n  try {\r\n    const { id } = c.req.param();\r\n    const { exception_date } = await c.req.json();\r\n    if (!exception_date) return c.json({ error: 'Missing required field: exception_date' }, 400);\r\n    if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(exception_date)) return c.json({ error: 'Invalid date format. Use YYYY-MM-DD' }, 400);\r\n    const event = await c.env.DB.prepare('SELECT * FROM calendar_events WHERE id = ?').bind(id).first();\r\n    if (!event) return c.json({ error: 'Event not found' }, 404);\r\n    if (!event.is_recurring) return c.json({ error: 'Event is not recurring' }, 400);\r\n    const exceptions = event.recurrence_exceptions ? JSON.parse(event.recurrence_exceptions as string) : [];\r\n    if (!exceptions.includes(exception_date)) exceptions.push(exception_date);\r\n    const { success } = await c.env.DB.prepare('UPDATE calendar_events SET recurrence_exceptions = ? WHERE id = ?')\r\n      .bind(JSON.stringify(exceptions), id).run();\r\n    return success ? c.json({ message: 'Exception added successfully' }) : c.json({ error: 'Failed to add exception' }, 500);\r\n  } catch (e) {\r\n    console.error('Error adding exception:', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\ncalendar.delete('/:id/exception', async (c) => {\r\n  try {\r\n    const { id } = c.req.param();\r\n    const { exception_date } = await c.req.json();\r\n    if (!exception_date) return c.json({ error: 'Missing required field: exception_date' }, 400);\r\n    const event = await c.env.DB.prepare('SELECT * FROM calendar_events WHERE id = ?').bind(id).first();\r\n    if (!event) return c.json({ error: 'Event not found' }, 404);\r\n    if (!event.is_recurring) return c.json({ error: 'Event is not recurring' }, 400);\r\n    const exceptions = event.recurrence_exceptions ? JSON.parse(event.recurrence_exceptions as string) : [];\r\n    const updated = exceptions.filter((d: string) => d !== exception_date);\r\n    const { success } = await c.env.DB.prepare('UPDATE calendar_events SET recurrence_exceptions = ? WHERE id = ?')\r\n      .bind(JSON.stringify(updated), id).run();\r\n    return success ? c.json({ message: 'Exception removed successfully' }) : c.json({ error: 'Failed to remove exception' }, 500);\r\n  } catch (e) {\r\n    console.error('Error removing exception:', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\nexport default calendar;\r\n", "import { Hono } from 'hono';\r\nimport { verify } from 'hono/jwt';\r\n\r\ntype Env = { DB: any; JWT_SECRET: string };\r\ntype JwtUser = { id: number; name: string; isAdmin: boolean };\r\n\r\nconst tasks = new Hono<{ Bindings: Env }>();\r\n\r\nasync function getAuthUser(c: any): Promise<JwtUser | null> {\r\n  const auth = c.req.header('Authorization');\r\n  if (!auth || !auth.startsWith('Bearer ')) return null;\r\n  try {\r\n    const token = auth.split(' ')[1];\r\n    const decoded: any = await verify(token, c.env.JWT_SECRET);\r\n    return { id: Number(decoded.id), name: String(decoded.name || ''), isAdmin: !!decoded.isAdmin };\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\n// List tasks\r\ntasks.get('/', async (c) => {\r\n  try {\r\n    const user = await getAuthUser(c);\r\n    if (!user) return c.json({ error: 'Unauthorized' }, 401);\r\n    const { results } = await c.env.DB.prepare(`\r\n      SELECT t.*, \r\n             u1.full_name as creator_username,\r\n             u2.full_name as assignee_username\r\n      FROM tasks t \r\n      LEFT JOIN users u1 ON t.created_by = u1.id\r\n      LEFT JOIN users u2 ON t.assigned_to = u2.id\r\n      ORDER BY COALESCE(t.due_date, '9999-12-31') ASC, t.created_at DESC\r\n    `).all();\r\n    return c.json(results);\r\n  } catch (e) {\r\n    console.error('Error fetching tasks', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Create task\r\ntasks.post('/', async (c) => {\r\n  try {\r\n    const user = await getAuthUser(c);\r\n    if (!user) return c.json({ error: 'Unauthorized' }, 401);\r\n    const { title, description, assigned_to, due_date, priority } = await c.req.json();\r\n    if (!title) return c.json({ error: 'Title is required' }, 400);\r\n    if (due_date && !/^\\d{4}-\\d{2}-\\d{2}$/.test(due_date)) {\r\n      return c.json({ error: 'Invalid due date format. Use YYYY-MM-DD' }, 400);\r\n    }\r\n    const validPriorities = ['low', 'medium', 'high'];\r\n    const p = validPriorities.includes(priority) ? priority : 'medium';\r\n    const { success } = await c.env.DB.prepare(\r\n      'INSERT INTO tasks (title, description, assigned_to, created_by, due_date, priority) VALUES (?, ?, ?, ?, ?, ?)'\r\n    ).bind(title, description || null, assigned_to || null, user.id, due_date || null, p).run();\r\n    if (success) return c.json({ message: 'Task created successfully' });\r\n    return c.json({ error: 'Failed to create task' }, 500);\r\n  } catch (e) {\r\n    console.error('Error creating task', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Update task\r\ntasks.put('/:id', async (c) => {\r\n  try {\r\n    const user = await getAuthUser(c);\r\n    if (!user) return c.json({ error: 'Unauthorized' }, 401);\r\n    const { id } = c.req.param();\r\n    const { title, description, completed, assigned_to, due_date, priority } = await c.req.json();\r\n    if (!title) return c.json({ error: 'Title is required' }, 400);\r\n    if (due_date && !/^\\d{4}-\\d{2}-\\d{2}$/.test(due_date)) {\r\n      return c.json({ error: 'Invalid due date format. Use YYYY-MM-DD' }, 400);\r\n    }\r\n    const validPriorities = ['low', 'medium', 'high'];\r\n    const p = validPriorities.includes(priority) ? priority : 'medium';\r\n    const { success } = await c.env.DB.prepare(\r\n      'UPDATE tasks SET title = ?, description = ?, completed = ?, assigned_to = ?, due_date = ?, priority = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?'\r\n    ).bind(title, description || null, completed ? 1 : 0, assigned_to || null, due_date || null, p, id).run();\r\n    if (success) return c.json({ message: 'Task updated successfully' });\r\n    return c.json({ error: 'Failed to update task' }, 500);\r\n  } catch (e) {\r\n    console.error('Error updating task', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Toggle completion\r\ntasks.patch('/:id/complete', async (c) => {\r\n  try {\r\n    const user = await getAuthUser(c);\r\n    if (!user) return c.json({ error: 'Unauthorized' }, 401);\r\n    const { id } = c.req.param();\r\n    const { completed } = await c.req.json();\r\n    if (typeof completed !== 'boolean') return c.json({ error: 'Invalid completed status' }, 400);\r\n    const { success } = await c.env.DB.prepare(\r\n      'UPDATE tasks SET completed = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?'\r\n    ).bind(completed ? 1 : 0, id).run();\r\n    if (success) return c.json({ message: 'Task completion status updated' });\r\n    return c.json({ error: 'Failed to update task' }, 500);\r\n  } catch (e) {\r\n    console.error('Error updating completion', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Delete task\r\ntasks.delete('/:id', async (c) => {\r\n  try {\r\n    const user = await getAuthUser(c);\r\n    if (!user) return c.json({ error: 'Unauthorized' }, 401);\r\n    const { id } = c.req.param();\r\n    const { success } = await c.env.DB.prepare('DELETE FROM tasks WHERE id = ?').bind(id).run();\r\n    if (success) return c.json({ message: 'Task deleted successfully' });\r\n    return c.json({ error: 'Failed to delete task' }, 500);\r\n  } catch (e) {\r\n    console.error('Error deleting task', e);\r\n    return c.json({ error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\nexport default tasks;\r\n", "import { Hono } from 'hono';\r\nimport { verify } from 'hono/jwt';\r\n\r\ntype Env = { DB: any; JWT_SECRET: string };\r\ntype JwtUser = { id: number; name: string; isAdmin: boolean };\r\n\r\nconst profile = new Hono<{ Bindings: Env }>();\r\n\r\nasync function getAuthUser(c: any): Promise<JwtUser | null> {\r\n  const auth = c.req.header('Authorization');\r\n  if (!auth || !auth.startsWith('Bearer ')) return null;\r\n  try {\r\n    const token = auth.split(' ')[1];\r\n    const decoded = await verify(token, c.env.JWT_SECRET);\r\n    return {\r\n      id: Number((decoded as any).id),\r\n      name: String((decoded as any).name || ''),\r\n      isAdmin: !!(decoded as any).isAdmin,\r\n    };\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function sha256(text: string): Promise<string> {\r\n  const data = new TextEncoder().encode(text);\r\n  const hash = await crypto.subtle.digest('SHA-256', data);\r\n  return Array.from(new Uint8Array(hash)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\n// Get current user profile\r\nprofile.get('/', async (c) => {\r\n  const au = await getAuthUser(c);\r\n  if (!au) return c.json({ error: 'Unauthorized' }, 401);\r\n  try {\r\n    const row = await c.env.DB\r\n      .prepare('SELECT id, full_name, is_admin, created_at, avatar_color FROM users WHERE id = ?')\r\n      .bind(au.id)\r\n      .first();\r\n    if (!row) return c.json({ error: 'User not found' }, 404);\r\n    return c.json({\r\n      id: row.id,\r\n      username: row.full_name,\r\n      is_admin: !!row.is_admin,\r\n      created_at: row.created_at,\r\n      avatar_color: row.avatar_color ?? null,\r\n    });\r\n  } catch (e) {\r\n    console.error('profile get error', e);\r\n    return c.json({ error: 'Failed to load profile' }, 500);\r\n  }\r\n});\r\n\r\n// Update username, avatar color, or password\r\nprofile.put('/', async (c) => {\r\n  const au = await getAuthUser(c);\r\n  if (!au) return c.json({ error: 'Unauthorized' }, 401);\r\n  let body: any;\r\n  try {\r\n    body = await c.req.json();\r\n  } catch {\r\n    return c.json({ error: 'Invalid JSON' }, 400);\r\n  }\r\n\r\n  // Password update\r\n  if (typeof body.password === 'string') {\r\n    const pw = body.password.trim();\r\n    if (pw.length < 6) return c.json({ error: 'Password must be at least 6 characters long' }, 400);\r\n    try {\r\n      const hash = await sha256(pw);\r\n      await c.env.DB\r\n        .prepare('UPDATE users SET password_hash = ? WHERE id = ?')\r\n        .bind(hash, au.id)\r\n        .run();\r\n      return c.json({ message: 'Password updated successfully' });\r\n    } catch (e) {\r\n      console.error('profile password update error', e);\r\n      return c.json({ error: 'Failed to update password' }, 500);\r\n    }\r\n  }\r\n\r\n  // Avatar color update\r\n  if (Object.prototype.hasOwnProperty.call(body, 'avatar_color')) {\r\n    try {\r\n      await c.env.DB\r\n        .prepare('UPDATE users SET avatar_color = ? WHERE id = ?')\r\n        .bind(body.avatar_color ?? null, au.id)\r\n        .run();\r\n      return c.json({ message: 'Avatar color updated successfully' });\r\n    } catch (e) {\r\n      console.error('profile avatar update error', e);\r\n      return c.json({ error: 'Failed to update avatar color' }, 500);\r\n    }\r\n  }\r\n\r\n  // Username update\r\n  if (typeof body.username === 'string') {\r\n    const newName = body.username.trim();\r\n    if (newName.length < 3) return c.json({ error: 'Username must be at least 3 characters long' }, 400);\r\n    try {\r\n      const exists = await c.env.DB\r\n        .prepare('SELECT id FROM users WHERE LOWER(full_name) = LOWER(?) AND id != ?')\r\n        .bind(newName, au.id)\r\n        .first();\r\n      if (exists) return c.json({ error: 'Username already taken' }, 409);\r\n      await c.env.DB\r\n        .prepare('UPDATE users SET full_name = ? WHERE id = ?')\r\n        .bind(newName, au.id)\r\n        .run();\r\n      return c.json({ message: 'Profile updated successfully' });\r\n    } catch (e) {\r\n      console.error('profile username update error', e);\r\n      return c.json({ error: 'Failed to update profile' }, 500);\r\n    }\r\n  }\r\n\r\n  return c.json({ error: 'No valid fields to update' }, 400);\r\n});\r\n\r\n// Change password with current password verification\r\nprofile.post('/change-password', async (c) => {\r\n  const au = await getAuthUser(c);\r\n  if (!au) return c.json({ error: 'Unauthorized' }, 401);\r\n  let body: any;\r\n  try {\r\n    body = await c.req.json();\r\n  } catch {\r\n    return c.json({ error: 'Invalid JSON' }, 400);\r\n  }\r\n  const { currentPassword, newPassword, confirmPassword } = body || {};\r\n  if (!currentPassword || !newPassword || !confirmPassword) return c.json({ error: 'All password fields are required' }, 400);\r\n  if (newPassword !== confirmPassword) return c.json({ error: 'New passwords do not match' }, 400);\r\n  if (String(newPassword).trim().length < 6) return c.json({ error: 'New password must be at least 6 characters long' }, 400);\r\n\r\n  try {\r\n    const row = await c.env.DB\r\n      .prepare('SELECT password_hash FROM users WHERE id = ?')\r\n      .bind(au.id)\r\n      .first();\r\n    if (!row) return c.json({ error: 'User not found' }, 404);\r\n    const currentHash = await sha256(String(currentPassword));\r\n    if (currentHash !== row.password_hash) return c.json({ error: 'Current password is incorrect' }, 401);\r\n    const newHash = await sha256(String(newPassword));\r\n    await c.env.DB\r\n      .prepare('UPDATE users SET password_hash = ? WHERE id = ?')\r\n      .bind(newHash, au.id)\r\n      .run();\r\n    return c.json({ message: 'Password changed successfully' });\r\n  } catch (e) {\r\n    console.error('profile change-password error', e);\r\n    return c.json({ error: 'Failed to change password' }, 500);\r\n  }\r\n});\r\n\r\nexport default profile;\r\n", "import { Hono } from 'hono';\r\nimport { verify } from 'hono/jwt';\r\n\r\ntype Env = {\r\n  DB: D1Database;\r\n  JWT_SECRET: string;\r\n};\r\n\r\nconst devices = new Hono<{ Bindings: Env }>();\r\n\r\nasync function getAuthUserId(c: any): Promise<number | null> {\r\n  const auth = c.req.header('Authorization');\r\n  if (!auth || !auth.startsWith('Bearer ')) return null;\r\n  try {\r\n    const token = auth.split(' ')[1];\r\n    const decoded: any = await verify(token, c.env.JWT_SECRET);\r\n    return Number(decoded.id);\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\n// Register or update a device token for the authenticated user\r\ndevices.post('/', async (c) => {\r\n  try {\r\n    const userId = await getAuthUserId(c);\r\n    if (!userId) return c.json({ error: 'Unauthorized' }, 401);\r\n    const body = await c.req.json<{ token: string; platform?: string }>();\r\n    const token = (body.token || '').trim();\r\n    const platform = (body.platform || 'android').toLowerCase();\r\n    if (!token) return c.json({ error: 'token is required' }, 400);\r\n    await c.env.DB.prepare(`\r\n      CREATE TABLE IF NOT EXISTS device_tokens (\r\n        user_id INTEGER NOT NULL,\r\n        token TEXT PRIMARY KEY,\r\n        platform TEXT,\r\n        updated_at TEXT\r\n      );\r\n    `).run();\r\n    const now = new Date().toISOString();\r\n    await c.env.DB.prepare(`\r\n      INSERT INTO device_tokens (user_id, token, platform, updated_at)\r\n      VALUES (?, ?, ?, ?)\r\n      ON CONFLICT(token) DO UPDATE SET user_id = excluded.user_id, platform = excluded.platform, updated_at = excluded.updated_at\r\n    `).bind(userId, token, platform, now).run();\r\n    return c.json({ ok: true });\r\n  } catch (e) {\r\n    return c.json({ error: 'Failed to save device token' }, 500);\r\n  }\r\n});\r\n\r\n// Remove a device token for the authenticated user (best-effort)\r\ndevices.delete('/', async (c) => {\r\n  try {\r\n    const userId = await getAuthUserId(c);\r\n    if (!userId) return c.json({ error: 'Unauthorized' }, 401);\r\n    const body = await c.req.json<{ token: string }>();\r\n    const token = (body.token || '').trim();\r\n    if (!token) return c.json({ error: 'token is required' }, 400);\r\n    await c.env.DB.prepare('DELETE FROM device_tokens WHERE token = ? AND user_id = ?').bind(token, userId).run();\r\n    return c.json({ ok: true });\r\n  } catch (e) {\r\n    return c.json({ error: 'Failed to remove device token' }, 500);\r\n  }\r\n});\r\n\r\n// List device tokens for the authenticated user\r\ndevices.get('/', async (c) => {\r\n  try {\r\n    const userId = await getAuthUserId(c);\r\n    if (!userId) return c.json({ error: 'Unauthorized' }, 401);\r\n    const { results } = await c.env.DB.prepare('SELECT token, platform, updated_at FROM device_tokens WHERE user_id = ? ORDER BY updated_at DESC')\r\n      .bind(userId).all();\r\n    return c.json({ ok: true, tokens: results || [] });\r\n  } catch (e) {\r\n    return c.json({ error: 'Failed to list device tokens' }, 500);\r\n  }\r\n});\r\n\r\nexport default devices;\r\n", "import { Hono } from 'hono';\r\n\r\ntype Env = {\r\n  R2_BUCKET?: R2Bucket;\r\n};\r\n\r\nconst uploads = new Hono<{ Bindings: Env }>();\r\n\r\n// Minimal placeholder image upload endpoint.\r\n// In production, switch to Cloudflare R2 and return a public URL.\r\nuploads.post('/image', async (c) => {\r\n  try {\r\n    const body = await c.req.json<{ filename?: string; contentType?: string; dataBase64: string }>();\r\n    const { dataBase64, filename = 'image', contentType = 'image/jpeg' } = body || ({} as any);\r\n    if (!dataBase64) return c.json({ error: 'dataBase64 is required' }, 400);\r\n    // If R2 is configured, store the image and return a public URL-like path\r\n    try {\r\n      if (c.env.R2_BUCKET) {\r\n        const key = `uploads/${Date.now()}-${Math.random().toString(36).slice(2)}-${filename}`.replace(/\\s+/g, '-');\r\n        const bytes = Uint8Array.from(atob(dataBase64), c => c.charCodeAt(0));\r\n        await c.env.R2_BUCKET.put(key, bytes, { httpMetadata: { contentType } });\r\n        // Return API proxy path for fetching: /api/uploads/r2/{key}\r\n        const encodedKey = encodeURIComponent(key);\r\n        return c.json({ ok: true, url: `/api/uploads/r2/${encodedKey}`, key, contentType, storage: 'r2' });\r\n      }\r\n    } catch (e) {\r\n      // Fall through to data URL fallback\r\n    }\r\n    // Fallback: echo a data URL back to unblock development\r\n    const url = `data:${contentType};base64,${dataBase64}`;\r\n    return c.json({ ok: true, url, filename, contentType, storage: 'data-url' });\r\n  } catch (e) {\r\n    return c.json({ error: 'Upload failed' }, 500);\r\n  }\r\n});\r\n\r\n// Proxy to read files from R2 (private bucket), served via API\r\nuploads.get('/r2/*', async (c) => {\r\n  try {\r\n    if (!c.env.R2_BUCKET) return c.json({ error: 'Storage not configured' }, 501);\r\n    const key = decodeURIComponent(c.req.path.replace(/^.*\\/r2\\//, ''));\r\n    if (!key) return c.json({ error: 'Missing key' }, 400);\r\n    const obj = await c.env.R2_BUCKET.get(key);\r\n    if (!obj) return c.json({ error: 'Not found' }, 404);\r\n    const headers = new Headers();\r\n    const ct = obj.httpMetadata?.contentType || 'application/octet-stream';\r\n    headers.set('Content-Type', ct);\r\n    if (obj.httpMetadata?.cacheControl) headers.set('Cache-Control', obj.httpMetadata.cacheControl);\r\n    return new Response(obj.body as ReadableStream, { headers, status: 200 });\r\n  } catch (e) {\r\n    return c.json({ error: 'Failed to fetch object' }, 500);\r\n  }\r\n});\r\n\r\nexport default uploads;\r\n", "import { Hono } from 'hono';\r\nimport { handle } from 'hono/cloudflare-pages';\r\nimport login from './auth/login';\r\nimport register from './auth/register';\r\nimport { corsMiddleware, errorMiddleware } from './middleware';\r\nimport chat from './chat';\r\nimport admin from './admin';\r\nimport calendar from './calendar';\r\nimport tasks from './tasks';\r\nimport profile from './profile';\r\nimport devices from './devices';\r\nimport uploads from './uploads';\r\n\r\nconst app = new Hono().basePath('/api');\r\n\r\n// global middleware\r\napp.use('*', corsMiddleware);\r\napp.use('*', errorMiddleware);\r\n\r\napp.route('/auth/login', login);\r\napp.route('/auth/register', register);\r\napp.route('/chat', chat);\r\napp.route('/admin', admin);\r\napp.route('/calendar', calendar);\r\napp.route('/tasks', tasks);\r\napp.route('/profile', profile);\r\napp.route('/devices', devices);\r\napp.route('/uploads', uploads);\r\n\r\napp.get('/health', (c) => c.json({ ok: true, env: 'pages', time: new Date().toISOString() }));\r\n\r\napp.get('/', (c) => c.json({\r\n  message: 'FRC7598 API',\r\n  endpoints: ['/api/health', '/api/auth/login', '/api/auth/register']\r\n}));\r\n\r\nexport const onRequest = handle(app);\r\n", "import { onRequest as __api___path___ts_onRequest } from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\functions\\\\api\\\\[[path]].ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/:path*\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api___path___ts_onRequest],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\.wrangler\\\\tmp\\\\bundle-cO3Eh1\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\.wrangler\\\\tmp\\\\bundle-cO3Eh1\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\.wrangler\\\\tmp\\\\bundle-cO3Eh1\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\.wrangler\\\\tmp\\\\pages-QbgBzy\\\\functionsWorker-0.49236943724340954.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\.wrangler\\\\tmp\\\\pages-QbgBzy\\\\functionsWorker-0.49236943724340954.mjs\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\.wrangler\\\\tmp\\\\bundle-2JPvwH\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\.wrangler\\\\tmp\\\\bundle-2JPvwH\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\gavin\\\\Github\\\\FRC7598\\\\.wrangler\\\\tmp\\\\bundle-2JPvwH\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["stripCfConnectingIPHeader", "__name", "match", "raw", "app", "routes", "Node", "Hono", "verifyWithJwks", "verify", "decode", "sign", "sha256", "token", "c", "getAuthUser", "parse", "value", "_a", "result", "char", "prefix", "i", "drainBody", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
